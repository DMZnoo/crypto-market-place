{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_pool",
                    "type": "address",
                    "internalType": "contract IonPool"
                },
                {
                    "name": "_gem",
                    "type": "address",
                    "internalType": "contract IERC20"
                },
                {
                    "name": "_ilkIndex",
                    "type": "uint8",
                    "internalType": "uint8"
                },
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "GEM",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IERC20"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "ILK_INDEX",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint8",
                    "internalType": "uint8"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "POOL",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IonPool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "acceptOwnership",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "exit",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "join",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "owner",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "pause",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "paused",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "pendingOwner",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "renounceOwnership",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "totalGem",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "transferOwnership",
            "inputs": [
                {
                    "name": "newOwner",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "unpause",
            "inputs": [],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "event",
            "name": "OwnershipTransferStarted",
            "inputs": [
                {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "OwnershipTransferred",
            "inputs": [
                {
                    "name": "previousOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "newOwner",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Paused",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Unpaused",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "indexed": false,
                    "internalType": "address"
                }
            ],
            "anonymous": false
        },
        {
            "type": "error",
            "name": "AddressEmptyCode",
            "inputs": [
                {
                    "name": "target",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "AddressInsufficientBalance",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "EnforcedPause",
            "inputs": []
        },
        {
            "type": "error",
            "name": "ExpectedPause",
            "inputs": []
        },
        {
            "type": "error",
            "name": "FailedInnerCall",
            "inputs": []
        },
        {
            "type": "error",
            "name": "Int256Overflow",
            "inputs": []
        },
        {
            "type": "error",
            "name": "OwnableInvalidOwner",
            "inputs": [
                {
                    "name": "owner",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "OwnableUnauthorizedAccount",
            "inputs": [
                {
                    "name": "account",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "SafeERC20FailedOperation",
            "inputs": [
                {
                    "name": "token",
                    "type": "address",
                    "internalType": "address"
                }
            ]
        },
        {
            "type": "error",
            "name": "WrongIlkAddress",
            "inputs": [
                {
                    "name": "ilkIndex",
                    "type": "uint8",
                    "internalType": "uint8"
                },
                {
                    "name": "gem",
                    "type": "address",
                    "internalType": "contract IERC20"
                }
            ]
        }
    ],
    "bytecode": {
        "object": "0x60e06040523480156200001157600080fd5b5060405162000d5038038062000d508339810160408190526200003491620001cc565b806001600160a01b0381166200006557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000708162000148565b506001805460ff60a01b191690556001600160a01b03838116608081905290851660a081905260ff841660c081905260405163efff005f60e01b8152600481019190915263efff005f90602401602060405180830381865afa158015620000db573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000101919062000239565b6001600160a01b0316146200013e57604051630b75b7fb60e31b815260ff831660048201526001600160a01b03841660248201526044016200005c565b5050505062000260565b600180546001600160a01b0319169055620001638162000166565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200016357600080fd5b60008060008060808587031215620001e357600080fd5b8451620001f081620001b6565b60208601519094506200020381620001b6565b604086015190935060ff811681146200021b57600080fd5b60608601519092506200022e81620001b6565b939692955090935050565b6000602082840312156200024c57600080fd5b81516200025981620001b6565b9392505050565b60805160a05160c051610a96620002ba600039600081816101ea01528181610296015261045a01526000818161017a015281816102d401526104330152600081816101110152818161033d01526104f80152610a966000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806383e8d3b81161008c578063e30c397811610066578063e30c3978146101d4578063ed0cee97146101e5578063ef693bed1461021e578063f2fde38b1461023157600080fd5b806383e8d3b8146101a45780638456cb59146101bb5780638da5cb5b146101c357600080fd5b80635c975abb116100c85780635c975abb14610150578063715018a61461016d5780637535d2461461017557806379ba50971461019c57600080fd5b80633b4da69f146100ef5780633f4ba83a146101045780634dc654111461010c575b600080fd5b6101026100fd366004610972565b610244565b005b61010261036b565b6101337f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b600154600160a01b900460ff166040519015158152602001610147565b61010261037d565b6101337f000000000000000000000000000000000000000000000000000000000000000081565b61010261038f565b6101ad60025481565b604051908152602001610147565b6101026103d8565b6000546001600160a01b0316610133565b6001546001600160a01b0316610133565b61020c7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610147565b61010261022c366004610972565b6103e8565b61010261023f36600461099c565b610521565b61024c610592565b600081121561026e576040516317aa172560e01b815260040160405180910390fd5b806002600082825461028091906109cd565b90915550506040516314e2c4e560e31b815260ff7f00000000000000000000000000000000000000000000000000000000000000001660048201526001600160a01b038381166024830152604482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a716272890606401600060405180830381600087803b15801561031857600080fd5b505af115801561032c573d6000803e3d6000fd5b506103679250506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690503330846105bd565b5050565b61037361062a565b61037b610657565b565b61038561062a565b61037b60006106ac565b60015433906001600160a01b031681146103cc5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6103d5816106ac565b50565b6103e061062a565b61037b6106c5565b6103f0610592565b6000811215610412576040516317aa172560e01b815260040160405180910390fd5b806002600082825461042491906109e0565b90915550506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a71627287f000000000000000000000000000000000000000000000000000000000000000033610483856109f3565b6040516001600160e01b031960e086901b16815260ff90931660048401526001600160a01b0390911660248301526044820152606401600060405180830381600087803b1580156104d357600080fd5b505af11580156104e7573d6000803e3d6000fd5b506103679250506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690508383610708565b61052961062a565b600180546001600160a01b0383166001600160a01b0319909116811790915561055a6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600154600160a01b900460ff161561037b5760405163d93c066560e01b815260040160405180910390fd5b6040516001600160a01b0384811660248301528381166044830152606482018390526106249186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061073e565b50505050565b6000546001600160a01b0316331461037b5760405163118cdaa760e01b81523360048201526024016103c3565b61065f6107a1565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600180546001600160a01b03191690556103d5816107cb565b6106cd610592565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861068f3390565b6040516001600160a01b0383811660248301526044820183905261073991859182169063a9059cbb906064016105f2565b505050565b60006107536001600160a01b0384168361081b565b905080516000141580156107785750808060200190518101906107769190610a0f565b155b1561073957604051635274afe760e01b81526001600160a01b03841660048201526024016103c3565b600154600160a01b900460ff1661037b57604051638dfc202b60e01b815260040160405180910390fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b606061082983836000610832565b90505b92915050565b6060814710156108575760405163cd78605960e01b81523060048201526024016103c3565b600080856001600160a01b031684866040516108739190610a31565b60006040518083038185875af1925050503d80600081146108b0576040519150601f19603f3d011682016040523d82523d6000602084013e6108b5565b606091505b50915091506108c58683836108d1565b925050505b9392505050565b6060826108e6576108e18261092d565b6108ca565b81511580156108fd57506001600160a01b0384163b155b1561092657604051639996b31560e01b81526001600160a01b03851660048201526024016103c3565b50806108ca565b80511561093d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b038116811461096d57600080fd5b919050565b6000806040838503121561098557600080fd5b61098e83610956565b946020939093013593505050565b6000602082840312156109ae57600080fd5b61082982610956565b634e487b7160e01b600052601160045260246000fd5b8082018082111561082c5761082c6109b7565b8181038181111561082c5761082c6109b7565b6000600160ff1b8201610a0857610a086109b7565b5060000390565b600060208284031215610a2157600080fd5b815180151581146108ca57600080fd5b6000825160005b81811015610a525760208186018101518583015201610a38565b50600092019182525091905056fea2646970667358221220b4cd187c48f03d53f1e49e711ddcae142ad0d33f3a19a981cc125485992a6e3a64736f6c63430008150033",
        "sourceMap": "974:2346:153:-:0;;;1577:294;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1657:5;-1:-1:-1;;;;;1273:26:43;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:43;;1350:1;1322:31;;;1048:51:222;1021:18;;1322:31:43;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1231:7:68;:15;;-1:-1:-1;;;;1231:15:68;;;-1:-1:-1;;;;;1674:10:153;;::::1;;::::0;;;1694:12;;::::1;;::::0;;;1231:15:68;1716:21:153;::::1;;::::0;;;1776:30:::1;::::0;-1:-1:-1;;;1776:30:153;;::::1;::::0;::::1;1254:36:222::0;;;;1776:19:153::1;::::0;1227:18:222;;1776:30:153::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1776:47:153::1;;1772:92;;1832:32;::::0;-1:-1:-1;;;1832:32:153;;1782:4:222;1770:17;;1832:32:153::1;::::0;::::1;1752:36:222::0;-1:-1:-1;;;;;1824:32:222;;1804:18;;;1797:60;1725:18;;1832:32:153::1;1566:297:222::0;1772:92:153::1;1577:294:::0;;;;974:2346;;1528:153:44;1617:13;1610:20;;-1:-1:-1;;;;;;1610:20:44;;;1640:34;1665:8;1640:24;:34::i;:::-;1528:153;:::o;2912:187:43:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:43;;;-1:-1:-1;;;;;;3020:17:43;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:140:222:-;-1:-1:-1;;;;;98:31:222;;88:42;;78:70;;144:1;141;134:12;159:738;287:6;295;303;311;364:3;352:9;343:7;339:23;335:33;332:53;;;381:1;378;371:12;332:53;413:9;407:16;432:40;466:5;432:40;:::i;:::-;541:2;526:18;;520:25;491:5;;-1:-1:-1;554:42:222;520:25;554:42;:::i;:::-;667:2;652:18;;646:25;615:7;;-1:-1:-1;715:4:222;702:18;;690:31;;680:59;;735:1;732;725:12;680:59;810:2;795:18;;789:25;758:7;;-1:-1:-1;823:42:222;789:25;823:42;:::i;:::-;159:738;;;;-1:-1:-1;159:738:222;;-1:-1:-1;;159:738:222:o;1301:260::-;1371:6;1424:2;1412:9;1403:7;1399:23;1395:32;1392:52;;;1440:1;1437;1430:12;1392:52;1472:9;1466:16;1491:40;1525:5;1491:40;:::i;:::-;1550:5;1301:260;-1:-1:-1;;;1301:260:222:o;1566:297::-;974:2346:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806383e8d3b81161008c578063e30c397811610066578063e30c3978146101d4578063ed0cee97146101e5578063ef693bed1461021e578063f2fde38b1461023157600080fd5b806383e8d3b8146101a45780638456cb59146101bb5780638da5cb5b146101c357600080fd5b80635c975abb116100c85780635c975abb14610150578063715018a61461016d5780637535d2461461017557806379ba50971461019c57600080fd5b80633b4da69f146100ef5780633f4ba83a146101045780634dc654111461010c575b600080fd5b6101026100fd366004610972565b610244565b005b61010261036b565b6101337f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b600154600160a01b900460ff166040519015158152602001610147565b61010261037d565b6101337f000000000000000000000000000000000000000000000000000000000000000081565b61010261038f565b6101ad60025481565b604051908152602001610147565b6101026103d8565b6000546001600160a01b0316610133565b6001546001600160a01b0316610133565b61020c7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610147565b61010261022c366004610972565b6103e8565b61010261023f36600461099c565b610521565b61024c610592565b600081121561026e576040516317aa172560e01b815260040160405180910390fd5b806002600082825461028091906109cd565b90915550506040516314e2c4e560e31b815260ff7f00000000000000000000000000000000000000000000000000000000000000001660048201526001600160a01b038381166024830152604482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a716272890606401600060405180830381600087803b15801561031857600080fd5b505af115801561032c573d6000803e3d6000fd5b506103679250506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690503330846105bd565b5050565b61037361062a565b61037b610657565b565b61038561062a565b61037b60006106ac565b60015433906001600160a01b031681146103cc5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6103d5816106ac565b50565b6103e061062a565b61037b6106c5565b6103f0610592565b6000811215610412576040516317aa172560e01b815260040160405180910390fd5b806002600082825461042491906109e0565b90915550506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a71627287f000000000000000000000000000000000000000000000000000000000000000033610483856109f3565b6040516001600160e01b031960e086901b16815260ff90931660048401526001600160a01b0390911660248301526044820152606401600060405180830381600087803b1580156104d357600080fd5b505af11580156104e7573d6000803e3d6000fd5b506103679250506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690508383610708565b61052961062a565b600180546001600160a01b0383166001600160a01b0319909116811790915561055a6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600154600160a01b900460ff161561037b5760405163d93c066560e01b815260040160405180910390fd5b6040516001600160a01b0384811660248301528381166044830152606482018390526106249186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061073e565b50505050565b6000546001600160a01b0316331461037b5760405163118cdaa760e01b81523360048201526024016103c3565b61065f6107a1565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600180546001600160a01b03191690556103d5816107cb565b6106cd610592565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861068f3390565b6040516001600160a01b0383811660248301526044820183905261073991859182169063a9059cbb906064016105f2565b505050565b60006107536001600160a01b0384168361081b565b905080516000141580156107785750808060200190518101906107769190610a0f565b155b1561073957604051635274afe760e01b81526001600160a01b03841660048201526024016103c3565b600154600160a01b900460ff1661037b57604051638dfc202b60e01b815260040160405180910390fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b606061082983836000610832565b90505b92915050565b6060814710156108575760405163cd78605960e01b81523060048201526024016103c3565b600080856001600160a01b031684866040516108739190610a31565b60006040518083038185875af1925050503d80600081146108b0576040519150601f19603f3d011682016040523d82523d6000602084013e6108b5565b606091505b50915091506108c58683836108d1565b925050505b9392505050565b6060826108e6576108e18261092d565b6108ca565b81511580156108fd57506001600160a01b0384163b155b1561092657604051639996b31560e01b81526001600160a01b03851660048201526024016103c3565b50806108ca565b80511561093d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b038116811461096d57600080fd5b919050565b6000806040838503121561098557600080fd5b61098e83610956565b946020939093013593505050565b6000602082840312156109ae57600080fd5b61082982610956565b634e487b7160e01b600052601160045260246000fd5b8082018082111561082c5761082c6109b7565b8181038181111561082c5761082c6109b7565b6000600160ff1b8201610a0857610a086109b7565b5060000390565b600060208284031215610a2157600080fd5b815180151581146108ca57600080fd5b6000825160005b81811015610a525760208186018101518583015201610a38565b50600092019182525091905056fea2646970667358221220b4cd187c48f03d53f1e49e711ddcae142ad0d33f3a19a981cc125485992a6e3a64736f6c63430008150033",
        "sourceMap": "974:2346:153:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2463:288;;;;;;:::i;:::-;;:::i;:::-;;2118:65;;;:::i;1140:27::-;;;;;;;;-1:-1:-1;;;;;654:55:222;;;636:74;;624:2;609:18;1140:27:153;;;;;;;;1850:84:68;1920:7;;-1:-1:-1;;;1920:7:68;;;;1850:84;;886:14:222;;879:22;861:41;;849:2;834:18;1850:84:68;721:187:222;2293:101:43;;;:::i;1173:29:153:-;;;;;1761:229:44;;;:::i;1247:23:153:-;;;;;;;;;1307:25:222;;;1295:2;1280:18;1247:23:153;1161:177:222;1962:61:153;;;:::i;1638:85:43:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:43;1638:85;;874:99:44;953:13;;-1:-1:-1;;;;;953:13:44;874:99;;1208:32:153;;;;;;;;1746:4:222;1734:17;;;1716:36;;1704:2;1689:18;1208:32:153;1574:184:222;3048:270:153;;;;;;:::i;:::-;;:::i;1166:178:44:-;;;;;;:::i;:::-;;:::i;2463:288:153:-;1474:19:68;:17;:19::i;:::-;2561:1:153::1;2551:6;2544:18;2540:47;;;2571:16;;-1:-1:-1::0;;;2571:16:153::1;;;;;;;;;;;2540:47;2610:6;2598:8;;:18;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2627:52:153::1;::::0;-1:-1:-1;;;2627:52:153;;2442:4:222;2647:9:153::1;2430:17:222::0;2627:52:153::1;::::0;::::1;2412:36:222::0;-1:-1:-1;;;;;2484:55:222;;;2464:18;;;2457:83;2556:18;;;2549:34;;;2627:4:153::1;:19;::::0;::::1;::::0;2385:18:222;;2627:52:153::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2689:55:153::1;::::0;-1:-1:-1;;;;;;;2689:3:153::1;:20;::::0;-1:-1:-1;2710:10:153::1;2730:4;2737:6:::0;2689:20:::1;:55::i;:::-;2463:288:::0;;:::o;2118:65::-;1531:13:43;:11;:13::i;:::-;2166:10:153::1;:8;:10::i;:::-;2118:65::o:0;2293:101:43:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;1761:229:44:-:0;953:13;;735:10:67;;-1:-1:-1;;;;;953:13:44;1856:24;;1852:96;;1903:34;;-1:-1:-1;;;1903:34:44;;-1:-1:-1;;;;;654:55:222;;1903:34:44;;;636:74:222;609:18;;1903:34:44;;;;;;;;1852:96;1957:26;1976:6;1957:18;:26::i;:::-;1803:187;1761:229::o;1962:61:153:-;1531:13:43;:11;:13::i;:::-;2008:8:153::1;:6;:8::i;3048:270::-:0;1474:19:68;:17;:19::i;:::-;3146:1:153::1;3136:6;3129:18;3125:47;;;3156:16;;-1:-1:-1::0;;;3156:16:153::1;;;;;;;;;;;3125:47;3195:6;3183:8;;:18;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;3212:4:153::1;:19;;3232:9;3243:10;3255:15;3263:6:::0;3255:15:::1;:::i;:::-;3212:59;::::0;-1:-1:-1;;;;;;3212:59:153::1;::::0;;;;;;2442:4:222;2430:17;;;3212:59:153::1;::::0;::::1;2412:36:222::0;-1:-1:-1;;;;;2484:55:222;;;2464:18;;;2457:83;2556:18;;;2549:34;2385:18;;3212:59:153::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;3281:30:153::1;::::0;-1:-1:-1;;;;;;;3281:3:153::1;:16;::::0;-1:-1:-1;3298:4:153;3304:6;3281:16:::1;:30::i;1166:178:44:-:0;1531:13:43;:11;:13::i;:::-;1255::44::1;:24:::0;;-1:-1:-1;;;;;1255:24:44;::::1;-1:-1:-1::0;;;;;;1255:24:44;;::::1;::::0;::::1;::::0;;;1319:7:::1;1684::43::0;1710:6;-1:-1:-1;;;;;1710:6:43;;1638:85;1319:7:44::1;-1:-1:-1::0;;;;;1294:43:44::1;;;;;;;;;;;1166:178:::0;:::o;2002:128:68:-;1920:7;;-1:-1:-1;;;1920:7:68;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:68;;;;;;;;;;;1702:188:65;1829:53;;-1:-1:-1;;;;;3149:15:222;;;1829:53:65;;;3131:34:222;3201:15;;;3181:18;;;3174:43;3233:18;;;3226:34;;;1802:81:65;;1822:5;;1844:18;;;;;3043::222;;1829:53:65;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1829:53:65;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;1796:162:43:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:43;735:10:67;1855:23:43;1851:101;;1901:40;;-1:-1:-1;;;1901:40:43;;735:10:67;1901:40:43;;;636:74:222;609:18;;1901:40:43;474:242:222;2710:117:68;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;;;2768:15:68::1;::::0;;2798:22:::1;735:10:67::0;2807:12:68::1;2798:22;::::0;-1:-1:-1;;;;;654:55:222;;;636:74;;624:2;609:18;2798:22:68::1;;;;;;;2710:117::o:0;1528:153:44:-;1617:13;1610:20;;-1:-1:-1;;;;;;1610:20:44;;;1640:34;1665:8;1640:24;:34::i;2463:115:68:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:14:::0;;-1:-1:-1;;;;2522:14:68::1;-1:-1:-1::0;;;2522:14:68::1;::::0;;2551:20:::1;2558:12;735:10:67::0;;656:96;1303:160:65;1412:43;;-1:-1:-1;;;;;3463:55:222;;;1412:43:65;;;3445:74:222;3535:18;;;3528:34;;;1385:71:65;;1405:5;;1427:14;;;;;3418:18:222;;1412:43:65;3271:297:222;1385:71:65;1303:160;;;:::o;4059:629::-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:65;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:65;;-1:-1:-1;;;;;654:55:222;;4631:40:65;;;636:74:222;609:18;;4631:40:65;474:242:222;2202:126:68;1920:7;;-1:-1:-1;;;1920:7:68;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:68;;;;;;;;;;;2912:187:43;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:43;;;-1:-1:-1;;;;;;3020:17:43;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2705:151:66:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:66;;3394:4;3359:41;;;636:74:222;609:18;;3359:41:66;474:242:222;3303:108:66;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:66;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:66;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:66;;-1:-1:-1;;;;;654:55:222;;5121:24:66;;;636:74:222;609:18;;5121:24:66;474:242:222;5041:119:66;-1:-1:-1;5180:10:66;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:66;;;;;;;;;;;14:196:222;82:20;;-1:-1:-1;;;;;131:54:222;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:254::-;283:6;291;344:2;332:9;323:7;319:23;315:32;312:52;;;360:1;357;350:12;312:52;383:29;402:9;383:29;:::i;:::-;373:39;459:2;444:18;;;;431:32;;-1:-1:-1;;;215:254:222:o;1763:186::-;1822:6;1875:2;1863:9;1854:7;1850:23;1846:32;1843:52;;;1891:1;1888;1881:12;1843:52;1914:29;1933:9;1914:29;:::i;1954:127::-;2015:10;2010:3;2006:20;2003:1;1996:31;2046:4;2043:1;2036:15;2070:4;2067:1;2060:15;2086:125;2151:9;;;2172:10;;;2169:36;;;2185:18;;:::i;2594:128::-;2661:9;;;2682:11;;;2679:37;;;2696:18;;:::i;2727:136::-;2762:3;-1:-1:-1;;;2783:22:222;;2780:48;;2808:18;;:::i;:::-;-1:-1:-1;2848:1:222;2844:13;;2727:136::o;3573:277::-;3640:6;3693:2;3681:9;3672:7;3668:23;3664:32;3661:52;;;3709:1;3706;3699:12;3661:52;3741:9;3735:16;3794:5;3787:13;3780:21;3773:5;3770:32;3760:60;;3816:1;3813;3806:12;3855:412;3984:3;4022:6;4016:13;4047:1;4057:129;4071:6;4068:1;4065:13;4057:129;;;4169:4;4153:14;;;4149:25;;4143:32;4130:11;;;4123:53;4086:12;4057:129;;;-1:-1:-1;4241:1:222;4205:16;;4230:13;;;-1:-1:-1;4205:16:222;3855:412;-1:-1:-1;3855:412:222:o",
        "linkReferences": {},
        "immutableReferences": {
            "73118": [
                {
                    "start": 273,
                    "length": 32
                },
                {
                    "start": 829,
                    "length": 32
                },
                {
                    "start": 1272,
                    "length": 32
                }
            ],
            "73121": [
                {
                    "start": 378,
                    "length": 32
                },
                {
                    "start": 724,
                    "length": 32
                },
                {
                    "start": 1075,
                    "length": 32
                }
            ],
            "73123": [
                {
                    "start": 490,
                    "length": 32
                },
                {
                    "start": 662,
                    "length": 32
                },
                {
                    "start": 1114,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "GEM()": "4dc65411",
        "ILK_INDEX()": "ed0cee97",
        "POOL()": "7535d246",
        "acceptOwnership()": "79ba5097",
        "exit(address,uint256)": "ef693bed",
        "join(address,uint256)": "3b4da69f",
        "owner()": "8da5cb5b",
        "pause()": "8456cb59",
        "paused()": "5c975abb",
        "pendingOwner()": "e30c3978",
        "renounceOwnership()": "715018a6",
        "totalGem()": "83e8d3b8",
        "transferOwnership(address)": "f2fde38b",
        "unpause()": "3f4ba83a"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IonPool\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_gem\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_ilkIndex\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Int256Overflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"ilkIndex\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"gem\",\"type\":\"address\"}],\"name\":\"WrongIlkAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GEM\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ILK_INDEX\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL\",\"outputs\":[{\"internalType\":\"contract IonPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalGem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@molecularlabs.io\",\"details\":\"Seperating collateral deposits from the core contract allows for handling tokens with non-standard behavior, if needed. This contract implements access control through `Ownable2Step`. This contract implements pausing through OpenZeppelin's `Pausable`.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"constructor\":{\"params\":{\"_gem\":\"ERC20 collateral to be associated with this `GemJoin` instance.\",\"_ilkIndex\":\"of the associated collateral.\",\"_pool\":\"Address of the `IonPool` contract.\",\"owner\":\"Admin of the contract.\"}},\"exit(address,uint256)\":{\"details\":\"Gem will be debited from `msg.sender` and sent to `user`.\",\"params\":{\"amount\":\"of gem to remove. [WAD]\",\"user\":\"to send the withdrawn ERC20 tokens to.\"}},\"join(address,uint256)\":{\"details\":\"Gem will be sourced from `msg.sender` and credited to `user`.\",\"params\":{\"amount\":\"of gem to add. [WAD]\",\"user\":\"to credit the gem to.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pauses the contract.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpauses the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Creates a new `GemJoin` instance.\"},\"exit(address,uint256)\":{\"notice\":\"Debits gem from the `IonPool`'s internal accounting and withdraws it into ERC20 token.\"},\"join(address,uint256)\":{\"notice\":\"Converts ERC20 token into gem (credit inside of the `IonPool`'s internal accounting).\"},\"pause()\":{\"notice\":\"Pauses the contract.\"},\"unpause()\":{\"notice\":\"Unpauses the contract.\"}},\"notice\":\"Collateral deposits are held independently from the `IonPool` core contract, but credited to users through `gem` balances.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/join/GemJoin.sol\":\"GemJoin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[\":@balancer-labs/v2-interfaces/=lib/balancer-v2-monorepo/pkg/interfaces/\",\":@balancer-labs/v2-pool-stable/=lib/balancer-v2-monorepo/pkg/pool-stable/\",\":@chainlink/contracts/=lib/chainlink/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":balancer-v2-monorepo/=lib/balancer-v2-monorepo/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/forge-safe/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-safe/=lib/forge-safe/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/solady/\",\":solidity-stringutils/=lib/forge-safe/lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/forge-safe/lib/solmate/src/\",\":surl/=lib/forge-safe/lib/surl/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol\":{\"keccak256\":\"0x956cbd3e346c8ff9b9e51b6e414f23b056198016f805eb04c6634946a10760af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2b6578d7ddfb0bf8c00edf3d21fa1f8063c41a2d478eef2a0f04ee0900e9c5e\",\"dweb:/ipfs/QmahbtHqGXJxthFT7oiZCkQfw7cezVAZpkWdrhS9xWZ9xy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48\",\"dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8\"]},\"lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlDefaultAdminRules.sol\":{\"keccak256\":\"0x969a4661694319a003d037ccbf7c8310f8994d746b763c933d3f76d906e67203\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3992218d90b149834c12bb2bbbb09fcf6cd44605bb37655fc5c42e2f0eaacdea\",\"dweb:/ipfs/QmaqD3yHE46mKZpqFZyMGZHEca5zcp2d53mYVhJz7Jzys2\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5313.sol\":{\"keccak256\":\"0x22412c268e74cc3cbf550aecc2f7456f6ac40783058e219cfe09f26f4d396621\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b841021f25480424d2359de4869e60e77f790f52e8e85f07aa389543024b559\",\"dweb:/ipfs/QmV7U5ehV5xe3QrbE8ErxfWSSzK1T1dGeizXvYPjWpNDGq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"src/InterestRate.sol\":{\"keccak256\":\"0x6fc6a04e08592ae307b6a82b722ef40af17399ebe857233df0050a6ad8233003\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://897f7c415d36f9644a524b1f4a87dc28c182a94c23299db4795d90044a872206\",\"dweb:/ipfs/QmWzE7j9FgGAjMC6bYcPZRqbQCaax2wNoS8Bikx234a9zh\"]},\"src/IonPool.sol\":{\"keccak256\":\"0xecc9e34370abd8c7c9acf04b9fb1ab98eb906a3ddb56f8bb312b51597d0c7d19\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://80e07b2792e700c552090195e6c134efe147c12c1b185b481091c9eca76e7cbe\",\"dweb:/ipfs/QmcHpGxKtfFL4DywzvB3g6WqECVR24DyUiV1vxbM8DHrBS\"]},\"src/Whitelist.sol\":{\"keccak256\":\"0x9e473d084a70f11517d2d2927b27372094e1c401ac948ab9d2f5ea248680a8e7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a15b1de5a9a5113b4593b5101433161090120bf983f775064f9eb22740ff4b0c\",\"dweb:/ipfs/QmQqHgqpohHHn32qSqUPkFfjJ4qXGFTCkDQ41N7qFXoK2x\"]},\"src/interfaces/IReserveFeed.sol\":{\"keccak256\":\"0x9b38d8e2dab70e29b7b7dab8a97d237decef53548fe9653b278950d38b99a882\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bd4f6d429731ae1fdfa4a8e5d64fc1eec4dd7535a7a58e1668d452a8b461517e\",\"dweb:/ipfs/QmVgxxZuvktDGwqVaDqJz5TViEV9BqDrhdGLnmAPo2HXZf\"]},\"src/interfaces/IYieldOracle.sol\":{\"keccak256\":\"0x95d7d7a547b3e246e39dab8b26635ac4a871876ef5b57ada9645a2b9e5ed2376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b39d64a79834574156583255d0a968d216f3eec9d3f8912a43284082305c706e\",\"dweb:/ipfs/Qmez6iwY2WWa4VvSWd6aMUCnrx7HQL8L7Eq1x7dj6MgvAx\"]},\"src/join/GemJoin.sol\":{\"keccak256\":\"0x25380b09eda343ac25cc33441e27d3e9ce9aa731a0a8be3b4419cb008bc8b64f\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9d2b9b4e470915148e60e2bd5270635069ad6ee96de6778d6116cb6b1b559ee7\",\"dweb:/ipfs/Qmd1nvw9noUptJBCBHfoNHRpBdTAF4fr1rWWyJJTo6c5mp\"]},\"src/libraries/math/WadRayMath.sol\":{\"keccak256\":\"0xb13d04661dd0e8ae0a585603820d126b8564cead93e0d2a403e5dfa17e12a574\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://794cb1c581c822234435db668b5f080bbedf85b7f9d3fc71a35a99bbc929f0ef\",\"dweb:/ipfs/Qmd4K9HkRHMmfieSdMAt5VqtAVrfp9Rk8FuVaZZJLNPgHU\"]},\"src/oracles/reserve/ReserveOracle.sol\":{\"keccak256\":\"0xa0744cdc64a7bfb39f2139a635a816916c6faa171ba3d24c26728ace42a56573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f50292c265ca0f27de73fdf467e830787350c0a923dfb36db356d1d57b3f48e\",\"dweb:/ipfs/QmT2gjYHrVgEBX5p7pAcv3BQr8E2iWzdnHSosFefWujjXv\"]},\"src/oracles/spot/SpotOracle.sol\":{\"keccak256\":\"0xff9769e2ea5157ed2cbf2f5ff4d4162302c9a2183e9e06e073ffabaf779ef08e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ea120586889b911529d3aa0da75ee5c9795a7c294a789c01a014fd53d955ae9\",\"dweb:/ipfs/QmProKH1gJ9Kw2R1K1ZG6T48KJTtvg2LmddwtgTQ4tfMDw\"]},\"src/reward/RewardModule.sol\":{\"keccak256\":\"0x04a369eb290638a8588fa08417aba98136280a798e1ae3edc68cf9967ee7106f\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://baf2f42349d84d82bf088387e21ff4158358f533381b3c09ab3f0e6fafbece0c\",\"dweb:/ipfs/QmUsgpfuor8d42MraAKNWJhJ2FQZ9YFmDj73LZEZRNx5kF\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.21+commit.d9974bed"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IonPool",
                            "name": "_pool",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IERC20",
                            "name": "_gem",
                            "type": "address"
                        },
                        {
                            "internalType": "uint8",
                            "name": "_ilkIndex",
                            "type": "uint8"
                        },
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "AddressEmptyCode"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "AddressInsufficientBalance"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "EnforcedPause"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ExpectedPause"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "FailedInnerCall"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "Int256Overflow"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "owner",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "OwnableInvalidOwner"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "OwnableUnauthorizedAccount"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "SafeERC20FailedOperation"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint8",
                            "name": "ilkIndex",
                            "type": "uint8"
                        },
                        {
                            "internalType": "contract IERC20",
                            "name": "gem",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "WrongIlkAddress"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OwnershipTransferStarted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "previousOwner",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "OwnershipTransferred",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Paused",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Unpaused",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "GEM",
                    "outputs": [
                        {
                            "internalType": "contract IERC20",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "ILK_INDEX",
                    "outputs": [
                        {
                            "internalType": "uint8",
                            "name": "",
                            "type": "uint8"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "POOL",
                    "outputs": [
                        {
                            "internalType": "contract IonPool",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "acceptOwnership"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "exit"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "join"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "owner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "pause"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "paused",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "pendingOwner",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "renounceOwnership"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "totalGem",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newOwner",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "transferOwnership"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unpause"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "acceptOwnership()": {
                        "details": "The new owner accepts the ownership transfer."
                    },
                    "constructor": {
                        "params": {
                            "_gem": "ERC20 collateral to be associated with this `GemJoin` instance.",
                            "_ilkIndex": "of the associated collateral.",
                            "_pool": "Address of the `IonPool` contract.",
                            "owner": "Admin of the contract."
                        }
                    },
                    "exit(address,uint256)": {
                        "details": "Gem will be debited from `msg.sender` and sent to `user`.",
                        "params": {
                            "amount": "of gem to remove. [WAD]",
                            "user": "to send the withdrawn ERC20 tokens to."
                        }
                    },
                    "join(address,uint256)": {
                        "details": "Gem will be sourced from `msg.sender` and credited to `user`.",
                        "params": {
                            "amount": "of gem to add. [WAD]",
                            "user": "to credit the gem to."
                        }
                    },
                    "owner()": {
                        "details": "Returns the address of the current owner."
                    },
                    "pause()": {
                        "details": "Pauses the contract."
                    },
                    "paused()": {
                        "details": "Returns true if the contract is paused, and false otherwise."
                    },
                    "pendingOwner()": {
                        "details": "Returns the address of the pending owner."
                    },
                    "renounceOwnership()": {
                        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
                    },
                    "transferOwnership(address)": {
                        "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
                    },
                    "unpause()": {
                        "details": "Unpauses the contract."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "constructor": {
                        "notice": "Creates a new `GemJoin` instance."
                    },
                    "exit(address,uint256)": {
                        "notice": "Debits gem from the `IonPool`'s internal accounting and withdraws it into ERC20 token."
                    },
                    "join(address,uint256)": {
                        "notice": "Converts ERC20 token into gem (credit inside of the `IonPool`'s internal accounting)."
                    },
                    "pause()": {
                        "notice": "Pauses the contract."
                    },
                    "unpause()": {
                        "notice": "Unpauses the contract."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@balancer-labs/v2-interfaces/=lib/balancer-v2-monorepo/pkg/interfaces/",
                "@balancer-labs/v2-pool-stable/=lib/balancer-v2-monorepo/pkg/pool-stable/",
                "@chainlink/contracts/=lib/chainlink/contracts/",
                "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "@uniswap/v3-core/=lib/v3-core/",
                "@uniswap/v3-periphery/=lib/v3-periphery/",
                "balancer-v2-monorepo/=lib/balancer-v2-monorepo/",
                "chainlink/=lib/chainlink/",
                "ds-test/=lib/forge-safe/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
                "forge-safe/=lib/forge-safe/src/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "solady/=lib/solady/",
                "solidity-stringutils/=lib/forge-safe/lib/surl/lib/solidity-stringutils/",
                "solmate/=lib/forge-safe/lib/solmate/src/",
                "surl/=lib/forge-safe/lib/surl/",
                "v3-core/=lib/v3-core/",
                "v3-periphery/=lib/v3-periphery/contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 300
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/join/GemJoin.sol": "GemJoin"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
                "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
                "urls": [
                    "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
                    "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol": {
                "keccak256": "0x956cbd3e346c8ff9b9e51b6e414f23b056198016f805eb04c6634946a10760af",
                "urls": [
                    "bzz-raw://d2b6578d7ddfb0bf8c00edf3d21fa1f8063c41a2d478eef2a0f04ee0900e9c5e",
                    "dweb:/ipfs/QmahbtHqGXJxthFT7oiZCkQfw7cezVAZpkWdrhS9xWZ9xy"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
                "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
                "urls": [
                    "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
                    "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
                "keccak256": "0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c",
                "urls": [
                    "bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b",
                    "dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol": {
                "keccak256": "0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97",
                "urls": [
                    "bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007",
                    "dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
                "keccak256": "0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8",
                "urls": [
                    "bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45",
                    "dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
                "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
                "urls": [
                    "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
                    "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
                "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
                "urls": [
                    "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
                    "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
                "keccak256": "0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688",
                "urls": [
                    "bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48",
                    "dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlDefaultAdminRules.sol": {
                "keccak256": "0x969a4661694319a003d037ccbf7c8310f8994d746b763c933d3f76d906e67203",
                "urls": [
                    "bzz-raw://3992218d90b149834c12bb2bbbb09fcf6cd44605bb37655fc5c42e2f0eaacdea",
                    "dweb:/ipfs/QmaqD3yHE46mKZpqFZyMGZHEca5zcp2d53mYVhJz7Jzys2"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/IERC5313.sol": {
                "keccak256": "0x22412c268e74cc3cbf550aecc2f7456f6ac40783058e219cfe09f26f4d396621",
                "urls": [
                    "bzz-raw://0b841021f25480424d2359de4869e60e77f790f52e8e85f07aa389543024b559",
                    "dweb:/ipfs/QmV7U5ehV5xe3QrbE8ErxfWSSzK1T1dGeizXvYPjWpNDGq"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
                "urls": [
                    "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
                    "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
                "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
                "urls": [
                    "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
                    "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
                "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
                "urls": [
                    "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
                    "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
                "urls": [
                    "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
                    "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
                "urls": [
                    "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
                    "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Pausable.sol": {
                "keccak256": "0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd",
                "urls": [
                    "bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc",
                    "dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
                "keccak256": "0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058",
                "urls": [
                    "bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac",
                    "dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
                "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
                "urls": [
                    "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
                    "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
                "urls": [
                    "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
                    "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
                "keccak256": "0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe",
                "urls": [
                    "bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c",
                    "dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
                "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
                "urls": [
                    "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
                    "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
                ],
                "license": "MIT"
            },
            "src/InterestRate.sol": {
                "keccak256": "0x6fc6a04e08592ae307b6a82b722ef40af17399ebe857233df0050a6ad8233003",
                "urls": [
                    "bzz-raw://897f7c415d36f9644a524b1f4a87dc28c182a94c23299db4795d90044a872206",
                    "dweb:/ipfs/QmWzE7j9FgGAjMC6bYcPZRqbQCaax2wNoS8Bikx234a9zh"
                ],
                "license": "BUSL-1.1"
            },
            "src/IonPool.sol": {
                "keccak256": "0xecc9e34370abd8c7c9acf04b9fb1ab98eb906a3ddb56f8bb312b51597d0c7d19",
                "urls": [
                    "bzz-raw://80e07b2792e700c552090195e6c134efe147c12c1b185b481091c9eca76e7cbe",
                    "dweb:/ipfs/QmcHpGxKtfFL4DywzvB3g6WqECVR24DyUiV1vxbM8DHrBS"
                ],
                "license": "AGPL-3.0-or-later"
            },
            "src/Whitelist.sol": {
                "keccak256": "0x9e473d084a70f11517d2d2927b27372094e1c401ac948ab9d2f5ea248680a8e7",
                "urls": [
                    "bzz-raw://a15b1de5a9a5113b4593b5101433161090120bf983f775064f9eb22740ff4b0c",
                    "dweb:/ipfs/QmQqHgqpohHHn32qSqUPkFfjJ4qXGFTCkDQ41N7qFXoK2x"
                ],
                "license": "UNLICENSED"
            },
            "src/interfaces/IReserveFeed.sol": {
                "keccak256": "0x9b38d8e2dab70e29b7b7dab8a97d237decef53548fe9653b278950d38b99a882",
                "urls": [
                    "bzz-raw://bd4f6d429731ae1fdfa4a8e5d64fc1eec4dd7535a7a58e1668d452a8b461517e",
                    "dweb:/ipfs/QmVgxxZuvktDGwqVaDqJz5TViEV9BqDrhdGLnmAPo2HXZf"
                ],
                "license": "UNLICENSED"
            },
            "src/interfaces/IYieldOracle.sol": {
                "keccak256": "0x95d7d7a547b3e246e39dab8b26635ac4a871876ef5b57ada9645a2b9e5ed2376",
                "urls": [
                    "bzz-raw://b39d64a79834574156583255d0a968d216f3eec9d3f8912a43284082305c706e",
                    "dweb:/ipfs/Qmez6iwY2WWa4VvSWd6aMUCnrx7HQL8L7Eq1x7dj6MgvAx"
                ],
                "license": "MIT"
            },
            "src/join/GemJoin.sol": {
                "keccak256": "0x25380b09eda343ac25cc33441e27d3e9ce9aa731a0a8be3b4419cb008bc8b64f",
                "urls": [
                    "bzz-raw://9d2b9b4e470915148e60e2bd5270635069ad6ee96de6778d6116cb6b1b559ee7",
                    "dweb:/ipfs/Qmd1nvw9noUptJBCBHfoNHRpBdTAF4fr1rWWyJJTo6c5mp"
                ],
                "license": "AGPL-3.0-or-later"
            },
            "src/libraries/math/WadRayMath.sol": {
                "keccak256": "0xb13d04661dd0e8ae0a585603820d126b8564cead93e0d2a403e5dfa17e12a574",
                "urls": [
                    "bzz-raw://794cb1c581c822234435db668b5f080bbedf85b7f9d3fc71a35a99bbc929f0ef",
                    "dweb:/ipfs/Qmd4K9HkRHMmfieSdMAt5VqtAVrfp9Rk8FuVaZZJLNPgHU"
                ],
                "license": "UNLICENSED"
            },
            "src/oracles/reserve/ReserveOracle.sol": {
                "keccak256": "0xa0744cdc64a7bfb39f2139a635a816916c6faa171ba3d24c26728ace42a56573",
                "urls": [
                    "bzz-raw://0f50292c265ca0f27de73fdf467e830787350c0a923dfb36db356d1d57b3f48e",
                    "dweb:/ipfs/QmT2gjYHrVgEBX5p7pAcv3BQr8E2iWzdnHSosFefWujjXv"
                ],
                "license": "MIT"
            },
            "src/oracles/spot/SpotOracle.sol": {
                "keccak256": "0xff9769e2ea5157ed2cbf2f5ff4d4162302c9a2183e9e06e073ffabaf779ef08e",
                "urls": [
                    "bzz-raw://7ea120586889b911529d3aa0da75ee5c9795a7c294a789c01a014fd53d955ae9",
                    "dweb:/ipfs/QmProKH1gJ9Kw2R1K1ZG6T48KJTtvg2LmddwtgTQ4tfMDw"
                ],
                "license": "MIT"
            },
            "src/reward/RewardModule.sol": {
                "keccak256": "0x04a369eb290638a8588fa08417aba98136280a798e1ae3edc68cf9967ee7106f",
                "urls": [
                    "bzz-raw://baf2f42349d84d82bf088387e21ff4158358f533381b3c09ab3f0e6fafbece0c",
                    "dweb:/ipfs/QmUsgpfuor8d42MraAKNWJhJ2FQZ9YFmDj73LZEZRNx5kF"
                ],
                "license": "AGPL-3.0-or-later"
            }
        },
        "version": 1
    },
    "ast": {
        "absolutePath": "src/join/GemJoin.sol",
        "id": 73285,
        "exportedSymbols": {
            "GemJoin": [
                73284
            ],
            "IERC20": [
                50586
            ],
            "IonPool": [
                66956
            ],
            "Ownable": [
                48644
            ],
            "Ownable2Step": [
                48730
            ],
            "Pausable": [
                51410
            ],
            "SafeERC20": [
                51018
            ]
        },
        "nodeType": "SourceUnit",
        "src": "46:3275:153",
        "nodes": [
            {
                "id": 73085,
                "nodeType": "PragmaDirective",
                "src": "46:23:153",
                "nodes": [],
                "literals": [
                    "solidity",
                    "0.8",
                    ".21"
                ]
            },
            {
                "id": 73087,
                "nodeType": "ImportDirective",
                "src": "71:41:153",
                "nodes": [],
                "absolutePath": "src/IonPool.sol",
                "file": "../IonPool.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 73285,
                "sourceUnit": 66957,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 73086,
                            "name": "IonPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66956,
                            "src": "80:7:153",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 73089,
                "nodeType": "ImportDirective",
                "src": "114:70:153",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Pausable.sol",
                "file": "@openzeppelin/contracts/utils/Pausable.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 73285,
                "sourceUnit": 51411,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 73088,
                            "name": "Pausable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51410,
                            "src": "123:8:153",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 73091,
                "nodeType": "ImportDirective",
                "src": "185:79:153",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol",
                "file": "@openzeppelin/contracts/access/Ownable2Step.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 73285,
                "sourceUnit": 48731,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 73090,
                            "name": "Ownable2Step",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48730,
                            "src": "194:12:153",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 73093,
                "nodeType": "ImportDirective",
                "src": "265:69:153",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                "file": "@openzeppelin/contracts/access/Ownable.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 73285,
                "sourceUnit": 48645,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 73092,
                            "name": "Ownable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48644,
                            "src": "274:7:153",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 73095,
                "nodeType": "ImportDirective",
                "src": "335:72:153",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
                "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 73285,
                "sourceUnit": 50587,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 73094,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50586,
                            "src": "344:6:153",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 73097,
                "nodeType": "ImportDirective",
                "src": "408:84:153",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 73285,
                "sourceUnit": 51019,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 73096,
                            "name": "SafeERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51018,
                            "src": "417:9:153",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 73284,
                "nodeType": "ContractDefinition",
                "src": "974:2346:153",
                "nodes": [
                    {
                        "id": 73104,
                        "nodeType": "ErrorDefinition",
                        "src": "1023:23:153",
                        "nodes": [],
                        "errorSelector": "17aa1725",
                        "name": "Int256Overflow",
                        "nameLocation": "1029:14:153",
                        "parameters": {
                            "id": 73103,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1043:2:153"
                        }
                    },
                    {
                        "id": 73111,
                        "nodeType": "ErrorDefinition",
                        "src": "1051:50:153",
                        "nodes": [],
                        "errorSelector": "5badbfd8",
                        "name": "WrongIlkAddress",
                        "nameLocation": "1057:15:153",
                        "parameters": {
                            "id": 73110,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 73106,
                                    "mutability": "mutable",
                                    "name": "ilkIndex",
                                    "nameLocation": "1079:8:153",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 73111,
                                    "src": "1073:14:153",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                    },
                                    "typeName": {
                                        "id": 73105,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1073:5:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 73109,
                                    "mutability": "mutable",
                                    "name": "gem",
                                    "nameLocation": "1096:3:153",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 73111,
                                    "src": "1089:10:153",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$50586",
                                        "typeString": "contract IERC20"
                                    },
                                    "typeName": {
                                        "id": 73108,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 73107,
                                            "name": "IERC20",
                                            "nameLocations": [
                                                "1089:6:153"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 50586,
                                            "src": "1089:6:153"
                                        },
                                        "referencedDeclaration": 50586,
                                        "src": "1089:6:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$50586",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1072:28:153"
                        }
                    },
                    {
                        "id": 73115,
                        "nodeType": "UsingForDirective",
                        "src": "1107:27:153",
                        "nodes": [],
                        "global": false,
                        "libraryName": {
                            "id": 73112,
                            "name": "SafeERC20",
                            "nameLocations": [
                                "1113:9:153"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 51018,
                            "src": "1113:9:153"
                        },
                        "typeName": {
                            "id": 73114,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 73113,
                                "name": "IERC20",
                                "nameLocations": [
                                    "1127:6:153"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 50586,
                                "src": "1127:6:153"
                            },
                            "referencedDeclaration": 50586,
                            "src": "1127:6:153",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$50586",
                                "typeString": "contract IERC20"
                            }
                        }
                    },
                    {
                        "id": 73118,
                        "nodeType": "VariableDeclaration",
                        "src": "1140:27:153",
                        "nodes": [],
                        "constant": false,
                        "functionSelector": "4dc65411",
                        "mutability": "immutable",
                        "name": "GEM",
                        "nameLocation": "1164:3:153",
                        "scope": 73284,
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$50586",
                            "typeString": "contract IERC20"
                        },
                        "typeName": {
                            "id": 73117,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 73116,
                                "name": "IERC20",
                                "nameLocations": [
                                    "1140:6:153"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 50586,
                                "src": "1140:6:153"
                            },
                            "referencedDeclaration": 50586,
                            "src": "1140:6:153",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$50586",
                                "typeString": "contract IERC20"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "id": 73121,
                        "nodeType": "VariableDeclaration",
                        "src": "1173:29:153",
                        "nodes": [],
                        "constant": false,
                        "functionSelector": "7535d246",
                        "mutability": "immutable",
                        "name": "POOL",
                        "nameLocation": "1198:4:153",
                        "scope": 73284,
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IonPool_$66956",
                            "typeString": "contract IonPool"
                        },
                        "typeName": {
                            "id": 73120,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 73119,
                                "name": "IonPool",
                                "nameLocations": [
                                    "1173:7:153"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 66956,
                                "src": "1173:7:153"
                            },
                            "referencedDeclaration": 66956,
                            "src": "1173:7:153",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IonPool_$66956",
                                "typeString": "contract IonPool"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "id": 73123,
                        "nodeType": "VariableDeclaration",
                        "src": "1208:32:153",
                        "nodes": [],
                        "constant": false,
                        "functionSelector": "ed0cee97",
                        "mutability": "immutable",
                        "name": "ILK_INDEX",
                        "nameLocation": "1231:9:153",
                        "scope": 73284,
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                        },
                        "typeName": {
                            "id": 73122,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1208:5:153",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "id": 73125,
                        "nodeType": "VariableDeclaration",
                        "src": "1247:23:153",
                        "nodes": [],
                        "constant": false,
                        "functionSelector": "83e8d3b8",
                        "mutability": "mutable",
                        "name": "totalGem",
                        "nameLocation": "1262:8:153",
                        "scope": 73284,
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 73124,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1247:7:153",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "id": 73170,
                        "nodeType": "FunctionDefinition",
                        "src": "1577:294:153",
                        "nodes": [],
                        "body": {
                            "id": 73169,
                            "nodeType": "Block",
                            "src": "1664:207:153",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 73144,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 73142,
                                            "name": "GEM",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73118,
                                            "src": "1674:3:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$50586",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 73143,
                                            "name": "_gem",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73132,
                                            "src": "1680:4:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$50586",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "src": "1674:10:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$50586",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "id": 73145,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1674:10:153"
                                },
                                {
                                    "expression": {
                                        "id": 73148,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 73146,
                                            "name": "POOL",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73121,
                                            "src": "1694:4:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IonPool_$66956",
                                                "typeString": "contract IonPool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 73147,
                                            "name": "_pool",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73129,
                                            "src": "1701:5:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IonPool_$66956",
                                                "typeString": "contract IonPool"
                                            }
                                        },
                                        "src": "1694:12:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IonPool_$66956",
                                            "typeString": "contract IonPool"
                                        }
                                    },
                                    "id": 73149,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1694:12:153"
                                },
                                {
                                    "expression": {
                                        "id": 73152,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 73150,
                                            "name": "ILK_INDEX",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73123,
                                            "src": "1716:9:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 73151,
                                            "name": "_ilkIndex",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73134,
                                            "src": "1728:9:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                            }
                                        },
                                        "src": "1716:21:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "id": 73153,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1716:21:153"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "id": 73162,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "arguments": [
                                                {
                                                    "id": 73156,
                                                    "name": "_ilkIndex",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 73134,
                                                    "src": "1796:9:153",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 73154,
                                                    "name": "_pool",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 73129,
                                                    "src": "1776:5:153",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IonPool_$66956",
                                                        "typeString": "contract IonPool"
                                                    }
                                                },
                                                "id": 73155,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1782:13:153",
                                                "memberName": "getIlkAddress",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 66220,
                                                "src": "1776:19:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                                    "typeString": "function (uint256) view external returns (address)"
                                                }
                                            },
                                            "id": 73157,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1776:30:153",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                            "arguments": [
                                                {
                                                    "id": 73160,
                                                    "name": "_gem",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 73132,
                                                    "src": "1818:4:153",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$50586",
                                                        "typeString": "contract IERC20"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_IERC20_$50586",
                                                        "typeString": "contract IERC20"
                                                    }
                                                ],
                                                "id": 73159,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "1810:7:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 73158,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1810:7:153",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 73161,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1810:13:153",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "1776:47:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 73168,
                                    "nodeType": "IfStatement",
                                    "src": "1772:92:153",
                                    "trueBody": {
                                        "errorCall": {
                                            "arguments": [
                                                {
                                                    "id": 73164,
                                                    "name": "_ilkIndex",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 73134,
                                                    "src": "1848:9:153",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    }
                                                },
                                                {
                                                    "id": 73165,
                                                    "name": "_gem",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 73132,
                                                    "src": "1859:4:153",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$50586",
                                                        "typeString": "contract IERC20"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_contract$_IERC20_$50586",
                                                        "typeString": "contract IERC20"
                                                    }
                                                ],
                                                "id": 73163,
                                                "name": "WrongIlkAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73111,
                                                "src": "1832:15:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_error_pure$_t_uint8_$_t_contract$_IERC20_$50586_$returns$__$",
                                                    "typeString": "function (uint8,contract IERC20) pure"
                                                }
                                            },
                                            "id": 73166,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1832:32:153",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$__$",
                                                "typeString": "tuple()"
                                            }
                                        },
                                        "id": 73167,
                                        "nodeType": "RevertStatement",
                                        "src": "1825:39:153"
                                    }
                                }
                            ]
                        },
                        "documentation": {
                            "id": 73126,
                            "nodeType": "StructuredDocumentation",
                            "src": "1277:295:153",
                            "text": " @notice Creates a new `GemJoin` instance.\n @param _pool Address of the `IonPool` contract.\n @param _gem ERC20 collateral to be associated with this `GemJoin` instance.\n @param _ilkIndex of the associated collateral.\n @param owner Admin of the contract."
                        },
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 73139,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 73136,
                                        "src": "1657:5:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 73140,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 73138,
                                    "name": "Ownable",
                                    "nameLocations": [
                                        "1649:7:153"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 48644,
                                    "src": "1649:7:153"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1649:14:153"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "parameters": {
                            "id": 73137,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 73129,
                                    "mutability": "mutable",
                                    "name": "_pool",
                                    "nameLocation": "1597:5:153",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 73170,
                                    "src": "1589:13:153",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IonPool_$66956",
                                        "typeString": "contract IonPool"
                                    },
                                    "typeName": {
                                        "id": 73128,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 73127,
                                            "name": "IonPool",
                                            "nameLocations": [
                                                "1589:7:153"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 66956,
                                            "src": "1589:7:153"
                                        },
                                        "referencedDeclaration": 66956,
                                        "src": "1589:7:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IonPool_$66956",
                                            "typeString": "contract IonPool"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 73132,
                                    "mutability": "mutable",
                                    "name": "_gem",
                                    "nameLocation": "1611:4:153",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 73170,
                                    "src": "1604:11:153",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$50586",
                                        "typeString": "contract IERC20"
                                    },
                                    "typeName": {
                                        "id": 73131,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 73130,
                                            "name": "IERC20",
                                            "nameLocations": [
                                                "1604:6:153"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 50586,
                                            "src": "1604:6:153"
                                        },
                                        "referencedDeclaration": 50586,
                                        "src": "1604:6:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$50586",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 73134,
                                    "mutability": "mutable",
                                    "name": "_ilkIndex",
                                    "nameLocation": "1623:9:153",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 73170,
                                    "src": "1617:15:153",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                    },
                                    "typeName": {
                                        "id": 73133,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1617:5:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 73136,
                                    "mutability": "mutable",
                                    "name": "owner",
                                    "nameLocation": "1642:5:153",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 73170,
                                    "src": "1634:13:153",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 73135,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1634:7:153",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1588:60:153"
                        },
                        "returnParameters": {
                            "id": 73141,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1664:0:153"
                        },
                        "scope": 73284,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 73180,
                        "nodeType": "FunctionDefinition",
                        "src": "1962:61:153",
                        "nodes": [],
                        "body": {
                            "id": 73179,
                            "nodeType": "Block",
                            "src": "1998:25:153",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 73176,
                                            "name": "_pause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 51393,
                                            "src": "2008:6:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 73177,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2008:8:153",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 73178,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2008:8:153"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 73171,
                            "nodeType": "StructuredDocumentation",
                            "src": "1877:80:153",
                            "text": " @notice Pauses the contract.\n @dev Pauses the contract."
                        },
                        "functionSelector": "8456cb59",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 73174,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 73173,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1988:9:153"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 48555,
                                    "src": "1988:9:153"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1988:9:153"
                            }
                        ],
                        "name": "pause",
                        "nameLocation": "1971:5:153",
                        "parameters": {
                            "id": 73172,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1976:2:153"
                        },
                        "returnParameters": {
                            "id": 73175,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1998:0:153"
                        },
                        "scope": 73284,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 73190,
                        "nodeType": "FunctionDefinition",
                        "src": "2118:65:153",
                        "nodes": [],
                        "body": {
                            "id": 73189,
                            "nodeType": "Block",
                            "src": "2156:27:153",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 73186,
                                            "name": "_unpause",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 51409,
                                            "src": "2166:8:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 73187,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2166:10:153",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 73188,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2166:10:153"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 73181,
                            "nodeType": "StructuredDocumentation",
                            "src": "2029:84:153",
                            "text": " @notice Unpauses the contract.\n @dev Unpauses the contract."
                        },
                        "functionSelector": "3f4ba83a",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 73184,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 73183,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "2146:9:153"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 48555,
                                    "src": "2146:9:153"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2146:9:153"
                            }
                        ],
                        "name": "unpause",
                        "nameLocation": "2127:7:153",
                        "parameters": {
                            "id": 73182,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2134:2:153"
                        },
                        "returnParameters": {
                            "id": 73185,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2156:0:153"
                        },
                        "scope": 73284,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 73238,
                        "nodeType": "FunctionDefinition",
                        "src": "2463:288:153",
                        "nodes": [],
                        "body": {
                            "id": 73237,
                            "nodeType": "Block",
                            "src": "2530:221:153",
                            "nodes": [],
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                        },
                                        "id": 73205,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "arguments": [
                                                {
                                                    "id": 73202,
                                                    "name": "amount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 73195,
                                                    "src": "2551:6:153",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                ],
                                                "id": 73201,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "2544:6:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_int256_$",
                                                    "typeString": "type(int256)"
                                                },
                                                "typeName": {
                                                    "id": 73200,
                                                    "name": "int256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "2544:6:153",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 73203,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2544:14:153",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_int256",
                                                "typeString": "int256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 73204,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2561:1:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "2544:18:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 73209,
                                    "nodeType": "IfStatement",
                                    "src": "2540:47:153",
                                    "trueBody": {
                                        "errorCall": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 73206,
                                                "name": "Int256Overflow",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73104,
                                                "src": "2571:14:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                    "typeString": "function () pure"
                                                }
                                            },
                                            "id": 73207,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2571:16:153",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$__$",
                                                "typeString": "tuple()"
                                            }
                                        },
                                        "id": 73208,
                                        "nodeType": "RevertStatement",
                                        "src": "2564:23:153"
                                    }
                                },
                                {
                                    "expression": {
                                        "id": 73212,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 73210,
                                            "name": "totalGem",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73125,
                                            "src": "2598:8:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                            "id": 73211,
                                            "name": "amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73195,
                                            "src": "2610:6:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2598:18:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 73213,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2598:18:153"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 73217,
                                                "name": "ILK_INDEX",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73123,
                                                "src": "2647:9:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            {
                                                "id": 73218,
                                                "name": "user",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73193,
                                                "src": "2658:4:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 73221,
                                                        "name": "amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 73195,
                                                        "src": "2671:6:153",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 73220,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2664:6:153",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_int256_$",
                                                        "typeString": "type(int256)"
                                                    },
                                                    "typeName": {
                                                        "id": 73219,
                                                        "name": "int256",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2664:6:153",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 73222,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2664:14:153",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int256",
                                                    "typeString": "int256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_int256",
                                                    "typeString": "int256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 73214,
                                                "name": "POOL",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73121,
                                                "src": "2627:4:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IonPool_$66956",
                                                    "typeString": "contract IonPool"
                                                }
                                            },
                                            "id": 73216,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "2632:14:153",
                                            "memberName": "mintAndBurnGem",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 66080,
                                            "src": "2627:19:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$_t_address_$_t_int256_$returns$__$",
                                                "typeString": "function (uint8,address,int256) external"
                                            }
                                        },
                                        "id": 73223,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2627:52:153",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 73224,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2627:52:153"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 73228,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "2710:3:153",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 73229,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "2714:6:153",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2710:10:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 73232,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -28,
                                                        "src": "2730:4:153",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_GemJoin_$73284",
                                                            "typeString": "contract GemJoin"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_GemJoin_$73284",
                                                            "typeString": "contract GemJoin"
                                                        }
                                                    ],
                                                    "id": 73231,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2722:7:153",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 73230,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2722:7:153",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 73233,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2722:13:153",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 73234,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73195,
                                                "src": "2737:6:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 73225,
                                                "name": "GEM",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73118,
                                                "src": "2689:3:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$50586",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 73227,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "2693:16:153",
                                            "memberName": "safeTransferFrom",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 50805,
                                            "src": "2689:20:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$50586_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$50586_$",
                                                "typeString": "function (contract IERC20,address,address,uint256)"
                                            }
                                        },
                                        "id": 73235,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2689:55:153",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 73236,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2689:55:153"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 73191,
                            "nodeType": "StructuredDocumentation",
                            "src": "2189:269:153",
                            "text": " @notice Converts ERC20 token into gem (credit inside of the `IonPool`'s internal accounting).\n @dev Gem will be sourced from `msg.sender` and credited to `user`.\n @param user to credit the gem to.\n @param amount of gem to add. [WAD]"
                        },
                        "functionSelector": "3b4da69f",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 73198,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 73197,
                                    "name": "whenNotPaused",
                                    "nameLocations": [
                                        "2516:13:153"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 51335,
                                    "src": "2516:13:153"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2516:13:153"
                            }
                        ],
                        "name": "join",
                        "nameLocation": "2472:4:153",
                        "parameters": {
                            "id": 73196,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 73193,
                                    "mutability": "mutable",
                                    "name": "user",
                                    "nameLocation": "2485:4:153",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 73238,
                                    "src": "2477:12:153",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 73192,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2477:7:153",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 73195,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "2499:6:153",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 73238,
                                    "src": "2491:14:153",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 73194,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2491:7:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2476:30:153"
                        },
                        "returnParameters": {
                            "id": 73199,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2530:0:153"
                        },
                        "scope": 73284,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "id": 73283,
                        "nodeType": "FunctionDefinition",
                        "src": "3048:270:153",
                        "nodes": [],
                        "body": {
                            "id": 73282,
                            "nodeType": "Block",
                            "src": "3115:203:153",
                            "nodes": [],
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                        },
                                        "id": 73253,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "arguments": [
                                                {
                                                    "id": 73250,
                                                    "name": "amount",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 73243,
                                                    "src": "3136:6:153",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                ],
                                                "id": 73249,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "3129:6:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_int256_$",
                                                    "typeString": "type(int256)"
                                                },
                                                "typeName": {
                                                    "id": 73248,
                                                    "name": "int256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "3129:6:153",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 73251,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3129:14:153",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_int256",
                                                "typeString": "int256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 73252,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3146:1:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "3129:18:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 73257,
                                    "nodeType": "IfStatement",
                                    "src": "3125:47:153",
                                    "trueBody": {
                                        "errorCall": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 73254,
                                                "name": "Int256Overflow",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73104,
                                                "src": "3156:14:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                    "typeString": "function () pure"
                                                }
                                            },
                                            "id": 73255,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3156:16:153",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_tuple$__$",
                                                "typeString": "tuple()"
                                            }
                                        },
                                        "id": 73256,
                                        "nodeType": "RevertStatement",
                                        "src": "3149:23:153"
                                    }
                                },
                                {
                                    "expression": {
                                        "id": 73260,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 73258,
                                            "name": "totalGem",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73125,
                                            "src": "3183:8:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "-=",
                                        "rightHandSide": {
                                            "id": 73259,
                                            "name": "amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 73243,
                                            "src": "3195:6:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "3183:18:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 73261,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3183:18:153"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 73265,
                                                "name": "ILK_INDEX",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73123,
                                                "src": "3232:9:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 73266,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "3243:3:153",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 73267,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "3247:6:153",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "3243:10:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 73272,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "-",
                                                "prefix": true,
                                                "src": "3255:15:153",
                                                "subExpression": {
                                                    "arguments": [
                                                        {
                                                            "id": 73270,
                                                            "name": "amount",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 73243,
                                                            "src": "3263:6:153",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 73269,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "3256:6:153",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_int256_$",
                                                            "typeString": "type(int256)"
                                                        },
                                                        "typeName": {
                                                            "id": 73268,
                                                            "name": "int256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3256:6:153",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 73271,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3256:14:153",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_int256",
                                                        "typeString": "int256"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_int256",
                                                    "typeString": "int256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_int256",
                                                    "typeString": "int256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 73262,
                                                "name": "POOL",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73121,
                                                "src": "3212:4:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IonPool_$66956",
                                                    "typeString": "contract IonPool"
                                                }
                                            },
                                            "id": 73264,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3217:14:153",
                                            "memberName": "mintAndBurnGem",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 66080,
                                            "src": "3212:19:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$_t_address_$_t_int256_$returns$__$",
                                                "typeString": "function (uint8,address,int256) external"
                                            }
                                        },
                                        "id": 73273,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3212:59:153",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 73274,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3212:59:153"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 73278,
                                                "name": "user",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73241,
                                                "src": "3298:4:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 73279,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73243,
                                                "src": "3304:6:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 73275,
                                                "name": "GEM",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 73118,
                                                "src": "3281:3:153",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$50586",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 73277,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3285:12:153",
                                            "memberName": "safeTransfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 50778,
                                            "src": "3281:16:153",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$50586_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$50586_$",
                                                "typeString": "function (contract IERC20,address,uint256)"
                                            }
                                        },
                                        "id": 73280,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3281:30:153",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 73281,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3281:30:153"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 73239,
                            "nodeType": "StructuredDocumentation",
                            "src": "2757:286:153",
                            "text": " @notice Debits gem from the `IonPool`'s internal accounting and withdraws it into ERC20 token.\n @dev Gem will be debited from `msg.sender` and sent to `user`.\n @param user to send the withdrawn ERC20 tokens to.\n @param amount of gem to remove. [WAD]"
                        },
                        "functionSelector": "ef693bed",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 73246,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 73245,
                                    "name": "whenNotPaused",
                                    "nameLocations": [
                                        "3101:13:153"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 51335,
                                    "src": "3101:13:153"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "3101:13:153"
                            }
                        ],
                        "name": "exit",
                        "nameLocation": "3057:4:153",
                        "parameters": {
                            "id": 73244,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 73241,
                                    "mutability": "mutable",
                                    "name": "user",
                                    "nameLocation": "3070:4:153",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 73283,
                                    "src": "3062:12:153",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 73240,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3062:7:153",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 73243,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "3084:6:153",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 73283,
                                    "src": "3076:14:153",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 73242,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3076:7:153",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3061:30:153"
                        },
                        "returnParameters": {
                            "id": 73247,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3115:0:153"
                        },
                        "scope": 73284,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 73099,
                            "name": "Ownable2Step",
                            "nameLocations": [
                                "994:12:153"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 48730,
                            "src": "994:12:153"
                        },
                        "id": 73100,
                        "nodeType": "InheritanceSpecifier",
                        "src": "994:12:153"
                    },
                    {
                        "baseName": {
                            "id": 73101,
                            "name": "Pausable",
                            "nameLocations": [
                                "1008:8:153"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 51410,
                            "src": "1008:8:153"
                        },
                        "id": 73102,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1008:8:153"
                    }
                ],
                "canonicalName": "GemJoin",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 73098,
                    "nodeType": "StructuredDocumentation",
                    "src": "494:479:153",
                    "text": " @notice Collateral deposits are held independently from the `IonPool` core\n contract, but credited to users through `gem` balances.\n @dev Seperating collateral deposits from the core contract allows for\n handling tokens with non-standard behavior, if needed.\n This contract implements access control through `Ownable2Step`.\n This contract implements pausing through OpenZeppelin's `Pausable`.\n @custom:security-contact security@molecularlabs.io"
                },
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                    73284,
                    51410,
                    48730,
                    48644,
                    51293
                ],
                "name": "GemJoin",
                "nameLocation": "983:7:153",
                "scope": 73285,
                "usedErrors": [
                    48510,
                    48515,
                    50745,
                    51026,
                    51031,
                    51034,
                    51315,
                    51318,
                    73104,
                    73111
                ],
                "usedEvents": [
                    48521,
                    48659,
                    51307,
                    51312
                ]
            }
        ],
        "license": "AGPL-3.0-or-later"
    },
    "id": 153
}