{
  "abi": [
    {
      "type": "receive",
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "BASE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ILK_INDEX",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "JOIN",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract GemJoin"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "LST_TOKEN",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "POOL",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IonPool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "WETH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IWETH9"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "WHITELIST",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract Whitelist"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "depositAndBorrow",
      "inputs": [
        {
          "name": "amountCollateral",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "amountToBorrow",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "proof",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "repayAndWithdraw",
      "inputs": [
        {
          "name": "debtToRepay",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "collateralToWithdraw",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "repayFullAndWithdraw",
      "inputs": [
        {
          "name": "collateralToWithdraw",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        {
          "name": "target",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "CannotSendEthToContract",
      "inputs": []
    },
    {
      "type": "error",
      "name": "FailedInnerCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "FlashloanRepaymentTooExpensive",
      "inputs": [
        {
          "name": "repaymentAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "maxRepaymentAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "MathOverflowedMulDiv",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "TransactionDeadlineReached",
      "inputs": [
        {
          "name": "deadline",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BASE()": "ec342ad0",
    "ILK_INDEX()": "ed0cee97",
    "JOIN()": "7f968148",
    "LST_TOKEN()": "50c6cf88",
    "POOL()": "7535d246",
    "WETH()": "ad5c4648",
    "WHITELIST()": "1bb7cc99",
    "depositAndBorrow(uint256,uint256,bytes32[])": "96c75259",
    "repayAndWithdraw(uint256,uint256)": "ebc9b94d",
    "repayFullAndWithdraw(uint256)": "e54a55b6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotSendEthToContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repaymentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRepaymentAmount\",\"type\":\"uint256\"}],\"name\":\"FlashloanRepaymentTooExpensive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"TransactionDeadlineReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BASE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ILK_INDEX\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JOIN\",\"outputs\":[{\"internalType\":\"contract GemJoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LST_TOKEN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL\",\"outputs\":[{\"internalType\":\"contract IonPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH9\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WHITELIST\",\"outputs\":[{\"internalType\":\"contract Whitelist\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToBorrow\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"depositAndBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"debtToRepay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralToWithdraw\",\"type\":\"uint256\"}],\"name\":\"repayAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralToWithdraw\",\"type\":\"uint256\"}],\"name\":\"repayFullAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:security-contact\":\"security@molecularlabs.io\",\"details\":\"To actually borrow from `IonPool`, a user must submit a \\\"normalized\\\" borrow amount. This contract is designed to be user-intuitive and, thus, allows a user to submit a standard desired borrow amount, which this contract will then convert into to the appropriate \\\"normalized\\\" borrow amount.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_gemJoin\":\"the `GemJoin` associated with the `ilkIndex` of this contract.\",\"_ilkIndex\":\"of the ilk for which this instance is associated with.\",\"_ionPool\":\"address of `IonPool` core contract.\",\"_whitelist\":\"the `Whitelist` module address.\"}},\"depositAndBorrow(uint256,uint256,bytes32[])\":{\"params\":{\"amountCollateral\":\"Amount of collateral to deposit. [WAD]\",\"amountToBorrow\":\"Amount of WETH to borrow. Due to rounding, true borrow amount might be slightly less. [WAD]\",\"proof\":\"that the user is whitelisted.\"}},\"repayAndWithdraw(uint256,uint256)\":{\"params\":{\"collateralToWithdraw\":\"In collateral terms. [WAD]\",\"debtToRepay\":\"In ETH terms. [WAD]\"}},\"repayFullAndWithdraw(uint256)\":{\"details\":\"Will repay the debt belonging to `msg.sender`. This function is necessary because with `rate` updating every single block, it may be difficult to repay a full amount if a user uses the total debt from a previous block. If a user ends up repaying all but dust amounts of debt (due to a slight `rate` change), then they repayment will likely fail due to the `dust` parameter.\",\"params\":{\"collateralToWithdraw\":\"in collateral terms. [WAD]\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Creates a new instance of `IonHandlerBase`\"},\"depositAndBorrow(uint256,uint256,bytes32[])\":{\"notice\":\"Combines gem-joining and depositing collateral and then borrowing into one compound action.\"},\"repayAndWithdraw(uint256,uint256)\":{\"notice\":\"Combines repaying debt and then withdrawing and gem-exitting collateral into one compound action. If repaying **all** is the intention, use `repayFullAndWithdraw()` instead to prevent tx revert from dust amounts of debt in vault.\"},\"repayFullAndWithdraw(uint256)\":{\"notice\":\"Will repay all debt and withdraw desired collateral amount. This function can also simply be used for a full repayment (which may be difficult through a direct tx to the `IonPool`) by setting `collateralToWithdraw` to 0.\"}},\"notice\":\"The base handler contract for simpler interactions with the `IonPool` core contract. It combines various individual interactions into one compound interaction to faciliate reaching user end-goals in atomic fashion.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/flash/handlers/base/IonHandlerBase.sol\":\"IonHandlerBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[\":@balancer-labs/v2-interfaces/=lib/balancer-v2-monorepo/pkg/interfaces/\",\":@balancer-labs/v2-pool-stable/=lib/balancer-v2-monorepo/pkg/pool-stable/\",\":@chainlink/contracts/=lib/chainlink/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/\",\":@uniswap/v3-periphery/=lib/v3-periphery/\",\":balancer-v2-monorepo/=lib/balancer-v2-monorepo/\",\":chainlink/=lib/chainlink/\",\":ds-test/=lib/forge-safe/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-safe/=lib/forge-safe/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/solady/\",\":solidity-stringutils/=lib/forge-safe/lib/surl/lib/solidity-stringutils/\",\":solmate/=lib/forge-safe/lib/solmate/src/\",\":surl/=lib/forge-safe/lib/surl/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol\":{\"keccak256\":\"0x956cbd3e346c8ff9b9e51b6e414f23b056198016f805eb04c6634946a10760af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2b6578d7ddfb0bf8c00edf3d21fa1f8063c41a2d478eef2a0f04ee0900e9c5e\",\"dweb:/ipfs/QmahbtHqGXJxthFT7oiZCkQfw7cezVAZpkWdrhS9xWZ9xy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b\",\"dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48\",\"dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8\"]},\"lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlDefaultAdminRules.sol\":{\"keccak256\":\"0x969a4661694319a003d037ccbf7c8310f8994d746b763c933d3f76d906e67203\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3992218d90b149834c12bb2bbbb09fcf6cd44605bb37655fc5c42e2f0eaacdea\",\"dweb:/ipfs/QmaqD3yHE46mKZpqFZyMGZHEca5zcp2d53mYVhJz7Jzys2\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5313.sol\":{\"keccak256\":\"0x22412c268e74cc3cbf550aecc2f7456f6ac40783058e219cfe09f26f4d396621\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b841021f25480424d2359de4869e60e77f790f52e8e85f07aa389543024b559\",\"dweb:/ipfs/QmV7U5ehV5xe3QrbE8ErxfWSSzK1T1dGeizXvYPjWpNDGq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"src/Constants.sol\":{\"keccak256\":\"0x402aa8821177ff39e172e82565d0f65f7ee4d690b9f501d56cafdec6a582956a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://84ace0f664f8384d315217481be838d1ae3fdc05c7adc68bef71433ccd04fb27\",\"dweb:/ipfs/QmYnQZrmsfdfTnpfwWih83C4rJTFunSe22cfcq9yTraQFc\"]},\"src/InterestRate.sol\":{\"keccak256\":\"0x6fc6a04e08592ae307b6a82b722ef40af17399ebe857233df0050a6ad8233003\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://897f7c415d36f9644a524b1f4a87dc28c182a94c23299db4795d90044a872206\",\"dweb:/ipfs/QmWzE7j9FgGAjMC6bYcPZRqbQCaax2wNoS8Bikx234a9zh\"]},\"src/IonPool.sol\":{\"keccak256\":\"0xecc9e34370abd8c7c9acf04b9fb1ab98eb906a3ddb56f8bb312b51597d0c7d19\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://80e07b2792e700c552090195e6c134efe147c12c1b185b481091c9eca76e7cbe\",\"dweb:/ipfs/QmcHpGxKtfFL4DywzvB3g6WqECVR24DyUiV1vxbM8DHrBS\"]},\"src/Whitelist.sol\":{\"keccak256\":\"0x9e473d084a70f11517d2d2927b27372094e1c401ac948ab9d2f5ea248680a8e7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a15b1de5a9a5113b4593b5101433161090120bf983f775064f9eb22740ff4b0c\",\"dweb:/ipfs/QmQqHgqpohHHn32qSqUPkFfjJ4qXGFTCkDQ41N7qFXoK2x\"]},\"src/flash/handlers/base/IonHandlerBase.sol\":{\"keccak256\":\"0x145c2ae15ddcedc06227e6130610ad947ce8c708ce2f50b59ef0822f90cd5678\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://36ebfe3231c82690f4c18e2b1ead839591aa87fbf93ea51e5699b3c0ceeb38d6\",\"dweb:/ipfs/QmZii1bRgzdm3Ni7TdHC9KW7bKBpyNeGC2mGVphR9Y6p5A\"]},\"src/interfaces/IChainlink.sol\":{\"keccak256\":\"0x86df556af26a6554582e0965d73536651c4d85f79e99af56b30f5d24168d68f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08a49936d93afdf6fcbd914afb1f7bd3622058c9ad1c2d90948234ff3b4b7e84\",\"dweb:/ipfs/QmRENUjx8By1mV18oWNK9Jj9GWZ3X51DLJVeVrmbugVqAv\"]},\"src/interfaces/ICreateX.sol\":{\"keccak256\":\"0xf1c17909eb3b6b394757300d0d7e7c8500d35ac9a28c124ffa5a63304ab6571f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://74767099367504646ac6aa4919c1692ef91fdc5428f39b43ef02bf23d632ef98\",\"dweb:/ipfs/Qmdfmw2d7PBgcgmLYSr6cMxHAm6Pn8sNs2NUyKY4RzHa4Y\"]},\"src/interfaces/IRedstone.sol\":{\"keccak256\":\"0x868a62ce0a1cb815b40531fd96dcc15c59270846bbefefa38a683be027ada768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1387a8cbf6834636f6109731596aadfcfe98b7c210c10cc3eb6477e1244c5c4f\",\"dweb:/ipfs/QmNYxhm1KMZ73Y5TPkcDzaAjBTqJaGyBrMHsShsAeiuwMg\"]},\"src/interfaces/IReserveFeed.sol\":{\"keccak256\":\"0x9b38d8e2dab70e29b7b7dab8a97d237decef53548fe9653b278950d38b99a882\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bd4f6d429731ae1fdfa4a8e5d64fc1eec4dd7535a7a58e1668d452a8b461517e\",\"dweb:/ipfs/QmVgxxZuvktDGwqVaDqJz5TViEV9BqDrhdGLnmAPo2HXZf\"]},\"src/interfaces/IWETH9.sol\":{\"keccak256\":\"0x685907c36ea48cf5133bc68a77552e8b5d25264ae0fedcfb488966d5f99ca159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74f85749c6c1e4ddd777769d8453b37e600597bfb23adb8a56e802948bcc57da\",\"dweb:/ipfs/QmX45AFdEu6TnQEkyrnA5pssbrKaUhRVQiBW33GJH51San\"]},\"src/interfaces/IYieldOracle.sol\":{\"keccak256\":\"0x95d7d7a547b3e246e39dab8b26635ac4a871876ef5b57ada9645a2b9e5ed2376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b39d64a79834574156583255d0a968d216f3eec9d3f8912a43284082305c706e\",\"dweb:/ipfs/Qmez6iwY2WWa4VvSWd6aMUCnrx7HQL8L7Eq1x7dj6MgvAx\"]},\"src/interfaces/ProviderInterfaces.sol\":{\"keccak256\":\"0xa9f6fefe80197d7c70bf9b06b9c49f892236f9334e4f767481b74036aaf967ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08fc9a09219bcc41d789d1438aa27232a03109ed2aa2ea30f00f8676cd4d3b04\",\"dweb:/ipfs/QmVoVw2cCrtEYtRGa2T9gp7bs29HDohT8pysFUu9fVVxiS\"]},\"src/join/GemJoin.sol\":{\"keccak256\":\"0x25380b09eda343ac25cc33441e27d3e9ce9aa731a0a8be3b4419cb008bc8b64f\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://9d2b9b4e470915148e60e2bd5270635069ad6ee96de6778d6116cb6b1b559ee7\",\"dweb:/ipfs/Qmd1nvw9noUptJBCBHfoNHRpBdTAF4fr1rWWyJJTo6c5mp\"]},\"src/libraries/math/WadRayMath.sol\":{\"keccak256\":\"0xb13d04661dd0e8ae0a585603820d126b8564cead93e0d2a403e5dfa17e12a574\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://794cb1c581c822234435db668b5f080bbedf85b7f9d3fc71a35a99bbc929f0ef\",\"dweb:/ipfs/Qmd4K9HkRHMmfieSdMAt5VqtAVrfp9Rk8FuVaZZJLNPgHU\"]},\"src/oracles/reserve/ReserveOracle.sol\":{\"keccak256\":\"0xa0744cdc64a7bfb39f2139a635a816916c6faa171ba3d24c26728ace42a56573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f50292c265ca0f27de73fdf467e830787350c0a923dfb36db356d1d57b3f48e\",\"dweb:/ipfs/QmT2gjYHrVgEBX5p7pAcv3BQr8E2iWzdnHSosFefWujjXv\"]},\"src/oracles/spot/SpotOracle.sol\":{\"keccak256\":\"0xff9769e2ea5157ed2cbf2f5ff4d4162302c9a2183e9e06e073ffabaf779ef08e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ea120586889b911529d3aa0da75ee5c9795a7c294a789c01a014fd53d955ae9\",\"dweb:/ipfs/QmProKH1gJ9Kw2R1K1ZG6T48KJTtvg2LmddwtgTQ4tfMDw\"]},\"src/reward/RewardModule.sol\":{\"keccak256\":\"0x04a369eb290638a8588fa08417aba98136280a798e1ae3edc68cf9967ee7106f\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://baf2f42349d84d82bf088387e21ff4158358f533381b3c09ab3f0e6fafbece0c\",\"dweb:/ipfs/QmUsgpfuor8d42MraAKNWJhJ2FQZ9YFmDj73LZEZRNx5kF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotSendEthToContract"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "repaymentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxRepaymentAmount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "FlashloanRepaymentTooExpensive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MathOverflowedMulDiv"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "TransactionDeadlineReached"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BASE",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ILK_INDEX",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "JOIN",
          "outputs": [
            {
              "internalType": "contract GemJoin",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "LST_TOKEN",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POOL",
          "outputs": [
            {
              "internalType": "contract IonPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH",
          "outputs": [
            {
              "internalType": "contract IWETH9",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WHITELIST",
          "outputs": [
            {
              "internalType": "contract Whitelist",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountToBorrow",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositAndBorrow"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "debtToRepay",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralToWithdraw",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayAndWithdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "collateralToWithdraw",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayFullAndWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_gemJoin": "the `GemJoin` associated with the `ilkIndex` of this contract.",
              "_ilkIndex": "of the ilk for which this instance is associated with.",
              "_ionPool": "address of `IonPool` core contract.",
              "_whitelist": "the `Whitelist` module address."
            }
          },
          "depositAndBorrow(uint256,uint256,bytes32[])": {
            "params": {
              "amountCollateral": "Amount of collateral to deposit. [WAD]",
              "amountToBorrow": "Amount of WETH to borrow. Due to rounding, true borrow amount might be slightly less. [WAD]",
              "proof": "that the user is whitelisted."
            }
          },
          "repayAndWithdraw(uint256,uint256)": {
            "params": {
              "collateralToWithdraw": "In collateral terms. [WAD]",
              "debtToRepay": "In ETH terms. [WAD]"
            }
          },
          "repayFullAndWithdraw(uint256)": {
            "details": "Will repay the debt belonging to `msg.sender`. This function is necessary because with `rate` updating every single block, it may be difficult to repay a full amount if a user uses the total debt from a previous block. If a user ends up repaying all but dust amounts of debt (due to a slight `rate` change), then they repayment will likely fail due to the `dust` parameter.",
            "params": {
              "collateralToWithdraw": "in collateral terms. [WAD]"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Creates a new instance of `IonHandlerBase`"
          },
          "depositAndBorrow(uint256,uint256,bytes32[])": {
            "notice": "Combines gem-joining and depositing collateral and then borrowing into one compound action."
          },
          "repayAndWithdraw(uint256,uint256)": {
            "notice": "Combines repaying debt and then withdrawing and gem-exitting collateral into one compound action. If repaying **all** is the intention, use `repayFullAndWithdraw()` instead to prevent tx revert from dust amounts of debt in vault."
          },
          "repayFullAndWithdraw(uint256)": {
            "notice": "Will repay all debt and withdraw desired collateral amount. This function can also simply be used for a full repayment (which may be difficult through a direct tx to the `IonPool`) by setting `collateralToWithdraw` to 0."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@balancer-labs/v2-interfaces/=lib/balancer-v2-monorepo/pkg/interfaces/",
        "@balancer-labs/v2-pool-stable/=lib/balancer-v2-monorepo/pkg/pool-stable/",
        "@chainlink/contracts/=lib/chainlink/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/=lib/v3-core/",
        "@uniswap/v3-periphery/=lib/v3-periphery/",
        "balancer-v2-monorepo/=lib/balancer-v2-monorepo/",
        "chainlink/=lib/chainlink/",
        "ds-test/=lib/forge-safe/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-safe/=lib/forge-safe/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "solady/=lib/solady/",
        "solidity-stringutils/=lib/forge-safe/lib/surl/lib/solidity-stringutils/",
        "solmate/=lib/forge-safe/lib/solmate/src/",
        "surl/=lib/forge-safe/lib/surl/",
        "v3-core/=lib/v3-core/",
        "v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 300
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/flash/handlers/base/IonHandlerBase.sol": "IonHandlerBase"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/extensions/AccessControlDefaultAdminRulesUpgradeable.sol": {
        "keccak256": "0x956cbd3e346c8ff9b9e51b6e414f23b056198016f805eb04c6634946a10760af",
        "urls": [
          "bzz-raw://d2b6578d7ddfb0bf8c00edf3d21fa1f8063c41a2d478eef2a0f04ee0900e9c5e",
          "dweb:/ipfs/QmahbtHqGXJxthFT7oiZCkQfw7cezVAZpkWdrhS9xWZ9xy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x72d47aebad24c59f6e78d0c3e827440173419a333fd910a37fa1e532c98f7e4c",
        "urls": [
          "bzz-raw://dc8d1401a44d84ede55b6641d58f63f12a83aecb0816d577d947392b55a6b43b",
          "dweb:/ipfs/QmUskJ7JGzg17MAgRoZfZ3p7P9uucsgm2fKyXQvxdLThLE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol": {
        "keccak256": "0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97",
        "urls": [
          "bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007",
          "dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8",
        "urls": [
          "bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45",
          "dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
        "urls": [
          "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
          "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x5d3e5de9eadfa1f8a892eb2e95bbebd3e4b8c8ada5b76f104d383fea518fa688",
        "urls": [
          "bzz-raw://cde108962511e6a4d3cfb7b6fb6a36bdcfa300761c17dad2d7dd87d4f8117b48",
          "dweb:/ipfs/Qmf7YxUVK68JedWybWfXvzLCegsD95DtGc3mbpEWkWSMm8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlDefaultAdminRules.sol": {
        "keccak256": "0x969a4661694319a003d037ccbf7c8310f8994d746b763c933d3f76d906e67203",
        "urls": [
          "bzz-raw://3992218d90b149834c12bb2bbbb09fcf6cd44605bb37655fc5c42e2f0eaacdea",
          "dweb:/ipfs/QmaqD3yHE46mKZpqFZyMGZHEca5zcp2d53mYVhJz7Jzys2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5313.sol": {
        "keccak256": "0x22412c268e74cc3cbf550aecc2f7456f6ac40783058e219cfe09f26f4d396621",
        "urls": [
          "bzz-raw://0b841021f25480424d2359de4869e60e77f790f52e8e85f07aa389543024b559",
          "dweb:/ipfs/QmV7U5ehV5xe3QrbE8ErxfWSSzK1T1dGeizXvYPjWpNDGq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Pausable.sol": {
        "keccak256": "0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd",
        "urls": [
          "bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc",
          "dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058",
        "urls": [
          "bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac",
          "dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe",
        "urls": [
          "bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c",
          "dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
        "urls": [
          "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
          "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
        "urls": [
          "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
          "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/Constants.sol": {
        "keccak256": "0x402aa8821177ff39e172e82565d0f65f7ee4d690b9f501d56cafdec6a582956a",
        "urls": [
          "bzz-raw://84ace0f664f8384d315217481be838d1ae3fdc05c7adc68bef71433ccd04fb27",
          "dweb:/ipfs/QmYnQZrmsfdfTnpfwWih83C4rJTFunSe22cfcq9yTraQFc"
        ],
        "license": "UNLICENSED"
      },
      "src/InterestRate.sol": {
        "keccak256": "0x6fc6a04e08592ae307b6a82b722ef40af17399ebe857233df0050a6ad8233003",
        "urls": [
          "bzz-raw://897f7c415d36f9644a524b1f4a87dc28c182a94c23299db4795d90044a872206",
          "dweb:/ipfs/QmWzE7j9FgGAjMC6bYcPZRqbQCaax2wNoS8Bikx234a9zh"
        ],
        "license": "BUSL-1.1"
      },
      "src/IonPool.sol": {
        "keccak256": "0xecc9e34370abd8c7c9acf04b9fb1ab98eb906a3ddb56f8bb312b51597d0c7d19",
        "urls": [
          "bzz-raw://80e07b2792e700c552090195e6c134efe147c12c1b185b481091c9eca76e7cbe",
          "dweb:/ipfs/QmcHpGxKtfFL4DywzvB3g6WqECVR24DyUiV1vxbM8DHrBS"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/Whitelist.sol": {
        "keccak256": "0x9e473d084a70f11517d2d2927b27372094e1c401ac948ab9d2f5ea248680a8e7",
        "urls": [
          "bzz-raw://a15b1de5a9a5113b4593b5101433161090120bf983f775064f9eb22740ff4b0c",
          "dweb:/ipfs/QmQqHgqpohHHn32qSqUPkFfjJ4qXGFTCkDQ41N7qFXoK2x"
        ],
        "license": "UNLICENSED"
      },
      "src/flash/handlers/base/IonHandlerBase.sol": {
        "keccak256": "0x145c2ae15ddcedc06227e6130610ad947ce8c708ce2f50b59ef0822f90cd5678",
        "urls": [
          "bzz-raw://36ebfe3231c82690f4c18e2b1ead839591aa87fbf93ea51e5699b3c0ceeb38d6",
          "dweb:/ipfs/QmZii1bRgzdm3Ni7TdHC9KW7bKBpyNeGC2mGVphR9Y6p5A"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IChainlink.sol": {
        "keccak256": "0x86df556af26a6554582e0965d73536651c4d85f79e99af56b30f5d24168d68f2",
        "urls": [
          "bzz-raw://08a49936d93afdf6fcbd914afb1f7bd3622058c9ad1c2d90948234ff3b4b7e84",
          "dweb:/ipfs/QmRENUjx8By1mV18oWNK9Jj9GWZ3X51DLJVeVrmbugVqAv"
        ],
        "license": "MIT"
      },
      "src/interfaces/ICreateX.sol": {
        "keccak256": "0xf1c17909eb3b6b394757300d0d7e7c8500d35ac9a28c124ffa5a63304ab6571f",
        "urls": [
          "bzz-raw://74767099367504646ac6aa4919c1692ef91fdc5428f39b43ef02bf23d632ef98",
          "dweb:/ipfs/Qmdfmw2d7PBgcgmLYSr6cMxHAm6Pn8sNs2NUyKY4RzHa4Y"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IRedstone.sol": {
        "keccak256": "0x868a62ce0a1cb815b40531fd96dcc15c59270846bbefefa38a683be027ada768",
        "urls": [
          "bzz-raw://1387a8cbf6834636f6109731596aadfcfe98b7c210c10cc3eb6477e1244c5c4f",
          "dweb:/ipfs/QmNYxhm1KMZ73Y5TPkcDzaAjBTqJaGyBrMHsShsAeiuwMg"
        ],
        "license": "MIT"
      },
      "src/interfaces/IReserveFeed.sol": {
        "keccak256": "0x9b38d8e2dab70e29b7b7dab8a97d237decef53548fe9653b278950d38b99a882",
        "urls": [
          "bzz-raw://bd4f6d429731ae1fdfa4a8e5d64fc1eec4dd7535a7a58e1668d452a8b461517e",
          "dweb:/ipfs/QmVgxxZuvktDGwqVaDqJz5TViEV9BqDrhdGLnmAPo2HXZf"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IWETH9.sol": {
        "keccak256": "0x685907c36ea48cf5133bc68a77552e8b5d25264ae0fedcfb488966d5f99ca159",
        "urls": [
          "bzz-raw://74f85749c6c1e4ddd777769d8453b37e600597bfb23adb8a56e802948bcc57da",
          "dweb:/ipfs/QmX45AFdEu6TnQEkyrnA5pssbrKaUhRVQiBW33GJH51San"
        ],
        "license": "MIT"
      },
      "src/interfaces/IYieldOracle.sol": {
        "keccak256": "0x95d7d7a547b3e246e39dab8b26635ac4a871876ef5b57ada9645a2b9e5ed2376",
        "urls": [
          "bzz-raw://b39d64a79834574156583255d0a968d216f3eec9d3f8912a43284082305c706e",
          "dweb:/ipfs/Qmez6iwY2WWa4VvSWd6aMUCnrx7HQL8L7Eq1x7dj6MgvAx"
        ],
        "license": "MIT"
      },
      "src/interfaces/ProviderInterfaces.sol": {
        "keccak256": "0xa9f6fefe80197d7c70bf9b06b9c49f892236f9334e4f767481b74036aaf967ce",
        "urls": [
          "bzz-raw://08fc9a09219bcc41d789d1438aa27232a03109ed2aa2ea30f00f8676cd4d3b04",
          "dweb:/ipfs/QmVoVw2cCrtEYtRGa2T9gp7bs29HDohT8pysFUu9fVVxiS"
        ],
        "license": "MIT"
      },
      "src/join/GemJoin.sol": {
        "keccak256": "0x25380b09eda343ac25cc33441e27d3e9ce9aa731a0a8be3b4419cb008bc8b64f",
        "urls": [
          "bzz-raw://9d2b9b4e470915148e60e2bd5270635069ad6ee96de6778d6116cb6b1b559ee7",
          "dweb:/ipfs/Qmd1nvw9noUptJBCBHfoNHRpBdTAF4fr1rWWyJJTo6c5mp"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/libraries/math/WadRayMath.sol": {
        "keccak256": "0xb13d04661dd0e8ae0a585603820d126b8564cead93e0d2a403e5dfa17e12a574",
        "urls": [
          "bzz-raw://794cb1c581c822234435db668b5f080bbedf85b7f9d3fc71a35a99bbc929f0ef",
          "dweb:/ipfs/Qmd4K9HkRHMmfieSdMAt5VqtAVrfp9Rk8FuVaZZJLNPgHU"
        ],
        "license": "UNLICENSED"
      },
      "src/oracles/reserve/ReserveOracle.sol": {
        "keccak256": "0xa0744cdc64a7bfb39f2139a635a816916c6faa171ba3d24c26728ace42a56573",
        "urls": [
          "bzz-raw://0f50292c265ca0f27de73fdf467e830787350c0a923dfb36db356d1d57b3f48e",
          "dweb:/ipfs/QmT2gjYHrVgEBX5p7pAcv3BQr8E2iWzdnHSosFefWujjXv"
        ],
        "license": "MIT"
      },
      "src/oracles/spot/SpotOracle.sol": {
        "keccak256": "0xff9769e2ea5157ed2cbf2f5ff4d4162302c9a2183e9e06e073ffabaf779ef08e",
        "urls": [
          "bzz-raw://7ea120586889b911529d3aa0da75ee5c9795a7c294a789c01a014fd53d955ae9",
          "dweb:/ipfs/QmProKH1gJ9Kw2R1K1ZG6T48KJTtvg2LmddwtgTQ4tfMDw"
        ],
        "license": "MIT"
      },
      "src/reward/RewardModule.sol": {
        "keccak256": "0x04a369eb290638a8588fa08417aba98136280a798e1ae3edc68cf9967ee7106f",
        "urls": [
          "bzz-raw://baf2f42349d84d82bf088387e21ff4158358f533381b3c09ab3f0e6fafbece0c",
          "dweb:/ipfs/QmUsgpfuor8d42MraAKNWJhJ2FQZ9YFmDj73LZEZRNx5kF"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/flash/handlers/base/IonHandlerBase.sol",
    "id": 70495,
    "exportedSymbols": {
      "GemJoin": [
        73284
      ],
      "IERC20": [
        50586
      ],
      "IWETH9": [
        72798
      ],
      "IonHandlerBase": [
        70494
      ],
      "IonPool": [
        66956
      ],
      "RAY": [
        73883
      ],
      "SafeERC20": [
        51018
      ],
      "WETH_ADDRESS": [
        62520
      ],
      "WadRayMath": [
        74291
      ],
      "Whitelist": [
        68086
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:10806:142",
    "nodes": [
      {
        "id": 69958,
        "nodeType": "PragmaDirective",
        "src": "37:23:142",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ]
      },
      {
        "id": 69960,
        "nodeType": "ImportDirective",
        "src": "62:47:142",
        "nodes": [],
        "absolutePath": "src/IonPool.sol",
        "file": "../../../IonPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70495,
        "sourceUnit": 66957,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69959,
              "name": "IonPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66956,
              "src": "71:7:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69962,
        "nodeType": "ImportDirective",
        "src": "110:56:142",
        "nodes": [],
        "absolutePath": "src/interfaces/IWETH9.sol",
        "file": "../../../interfaces/IWETH9.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70495,
        "sourceUnit": 72799,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69961,
              "name": "IWETH9",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 72798,
              "src": "119:6:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69964,
        "nodeType": "ImportDirective",
        "src": "167:52:142",
        "nodes": [],
        "absolutePath": "src/join/GemJoin.sol",
        "file": "../../../join/GemJoin.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70495,
        "sourceUnit": 73285,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69963,
              "name": "GemJoin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73284,
              "src": "176:7:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69967,
        "nodeType": "ImportDirective",
        "src": "220:73:142",
        "nodes": [],
        "absolutePath": "src/libraries/math/WadRayMath.sol",
        "file": "../../../libraries/math/WadRayMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70495,
        "sourceUnit": 74292,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69965,
              "name": "WadRayMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 74291,
              "src": "229:10:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 69966,
              "name": "RAY",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73883,
              "src": "241:3:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69969,
        "nodeType": "ImportDirective",
        "src": "294:51:142",
        "nodes": [],
        "absolutePath": "src/Whitelist.sol",
        "file": "../../../Whitelist.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70495,
        "sourceUnit": 68087,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69968,
              "name": "Whitelist",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68086,
              "src": "303:9:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69971,
        "nodeType": "ImportDirective",
        "src": "346:54:142",
        "nodes": [],
        "absolutePath": "src/Constants.sol",
        "file": "../../../Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70495,
        "sourceUnit": 62611,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69970,
              "name": "WETH_ADDRESS",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 62520,
              "src": "355:12:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69973,
        "nodeType": "ImportDirective",
        "src": "402:71:142",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70495,
        "sourceUnit": 49023,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69972,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50586,
              "src": "411:6:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69975,
        "nodeType": "ImportDirective",
        "src": "474:84:142",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70495,
        "sourceUnit": 51019,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69974,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51018,
              "src": "483:9:142",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70494,
        "nodeType": "ContractDefinition",
        "src": "1167:9675:142",
        "nodes": [
          {
            "id": 69980,
            "nodeType": "UsingForDirective",
            "src": "1206:27:142",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 69977,
              "name": "SafeERC20",
              "nameLocations": [
                "1212:9:142"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51018,
              "src": "1212:9:142"
            },
            "typeName": {
              "id": 69979,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 69978,
                "name": "IERC20",
                "nameLocations": [
                  "1226:6:142"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50586,
                "src": "1226:6:142"
              },
              "referencedDeclaration": 50586,
              "src": "1226:6:142",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$50586",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 69984,
            "nodeType": "UsingForDirective",
            "src": "1238:27:142",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 69981,
              "name": "SafeERC20",
              "nameLocations": [
                "1244:9:142"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51018,
              "src": "1244:9:142"
            },
            "typeName": {
              "id": 69983,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 69982,
                "name": "IWETH9",
                "nameLocations": [
                  "1258:6:142"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72798,
                "src": "1258:6:142"
              },
              "referencedDeclaration": 72798,
              "src": "1258:6:142",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH9_$72798",
                "typeString": "contract IWETH9"
              }
            }
          },
          {
            "id": 69987,
            "nodeType": "UsingForDirective",
            "src": "1270:29:142",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 69985,
              "name": "WadRayMath",
              "nameLocations": [
                "1276:10:142"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 74291,
              "src": "1276:10:142"
            },
            "typeName": {
              "id": 69986,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1291:7:142",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 69989,
            "nodeType": "ErrorDefinition",
            "src": "1305:32:142",
            "nodes": [],
            "errorSelector": "7c566353",
            "name": "CannotSendEthToContract",
            "nameLocation": "1311:23:142",
            "parameters": {
              "id": 69988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1334:2:142"
            }
          },
          {
            "id": 69995,
            "nodeType": "ErrorDefinition",
            "src": "1342:90:142",
            "nodes": [],
            "errorSelector": "848aeed6",
            "name": "FlashloanRepaymentTooExpensive",
            "nameLocation": "1348:30:142",
            "parameters": {
              "id": 69994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69991,
                  "mutability": "mutable",
                  "name": "repaymentAmount",
                  "nameLocation": "1387:15:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 69995,
                  "src": "1379:23:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69993,
                  "mutability": "mutable",
                  "name": "maxRepaymentAmount",
                  "nameLocation": "1412:18:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 69995,
                  "src": "1404:26:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1378:53:142"
            }
          },
          {
            "id": 69999,
            "nodeType": "ErrorDefinition",
            "src": "1437:51:142",
            "nodes": [],
            "errorSelector": "356dfb6f",
            "name": "TransactionDeadlineReached",
            "nameLocation": "1443:26:142",
            "parameters": {
              "id": 69998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69997,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1478:8:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 69999,
                  "src": "1470:16:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1470:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1469:18:142"
            }
          },
          {
            "id": 70015,
            "nodeType": "ModifierDefinition",
            "src": "1739:145:142",
            "nodes": [],
            "body": {
              "id": 70014,
              "nodeType": "Block",
              "src": "1780:104:142",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 70004,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70002,
                      "src": "1794:8:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 70005,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1806:5:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 70006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1812:9:142",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1806:15:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1794:27:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70012,
                  "nodeType": "IfStatement",
                  "src": "1790:76:142",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "id": 70009,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70002,
                          "src": "1857:8:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 70008,
                        "name": "TransactionDeadlineReached",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69999,
                        "src": "1830:26:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) pure"
                        }
                      },
                      "id": 70010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1830:36:142",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 70011,
                    "nodeType": "RevertStatement",
                    "src": "1823:43:142"
                  }
                },
                {
                  "id": 70013,
                  "nodeType": "PlaceholderStatement",
                  "src": "1876:1:142"
                }
              ]
            },
            "documentation": {
              "id": 70000,
              "nodeType": "StructuredDocumentation",
              "src": "1494:240:142",
              "text": " @notice Checks if the tx is being executed before the designated deadline\n for execution.\n @dev This is used to prevent txs that have sat in the mempool for too\n long from executing at unintended prices."
            },
            "name": "checkDeadline",
            "nameLocation": "1748:13:142",
            "parameters": {
              "id": 70003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70002,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1770:8:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70015,
                  "src": "1762:16:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1761:18:142"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 70034,
            "nodeType": "ModifierDefinition",
            "src": "2225:159:142",
            "nodes": [],
            "body": {
              "id": 70033,
              "nodeType": "Block",
              "src": "2283:101:142",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70024,
                        "name": "ILK_INDEX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70046,
                        "src": "2325:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 70025,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2336:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2340:6:142",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2336:10:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 70027,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2348:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2352:6:142",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2348:10:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70029,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70019,
                        "src": "2360:5:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 70021,
                        "name": "WHITELIST",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70058,
                        "src": "2293:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Whitelist_$68086",
                          "typeString": "contract Whitelist"
                        }
                      },
                      "id": 70023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2303:21:142",
                      "memberName": "isWhitelistedBorrower",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68022,
                      "src": "2293:31:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint8_$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint8,address,address,bytes32[] memory) view external returns (bool)"
                      }
                    },
                    "id": 70030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:73:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70031,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:73:142"
                },
                {
                  "id": 70032,
                  "nodeType": "PlaceholderStatement",
                  "src": "2376:1:142"
                }
              ]
            },
            "documentation": {
              "id": 70016,
              "nodeType": "StructuredDocumentation",
              "src": "1890:330:142",
              "text": " @notice Checks if `msg.sender` is on the whitelist.\n @dev This contract will be on the `protocolControlledWhitelist`. As such,\n it will validate that users are on the whitelist itself and be able to\n bypass the whitelist check on `IonPool`.\n @param proof to validate the whitelist check."
            },
            "name": "onlyWhitelistedBorrowers",
            "nameLocation": "2234:24:142",
            "parameters": {
              "id": 70020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70019,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "2276:5:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70034,
                  "src": "2259:22:142",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 70017,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2259:7:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 70018,
                    "nodeType": "ArrayTypeName",
                    "src": "2259:9:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2258:24:142"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 70038,
            "nodeType": "EnumDefinition",
            "src": "2894:58:142",
            "nodes": [],
            "canonicalName": "IonHandlerBase.AmountToBorrow",
            "documentation": {
              "id": 70035,
              "nodeType": "StructuredDocumentation",
              "src": "2390:499:142",
              "text": " @dev During conversion from borrow amount -> \"normalized\" borrow amount,\"\n there is division required. In certain scenarios, it may be desirable to\n round up during division, in others, to round down. This enum allows a\n developer to indicate the rounding direction by describing the\n `amountToBorrow`. If it `IS_MIN`, then the final borrowed amount should\n be larger than `amountToBorrow` (round up), and vice versa for `IS_MAX`\n (round down)."
            },
            "members": [
              {
                "id": 70036,
                "name": "IS_MIN",
                "nameLocation": "2924:6:142",
                "nodeType": "EnumValue",
                "src": "2924:6:142"
              },
              {
                "id": 70037,
                "name": "IS_MAX",
                "nameLocation": "2940:6:142",
                "nodeType": "EnumValue",
                "src": "2940:6:142"
              }
            ],
            "name": "AmountToBorrow",
            "nameLocation": "2899:14:142"
          },
          {
            "id": 70041,
            "nodeType": "VariableDeclaration",
            "src": "2958:28:142",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec342ad0",
            "mutability": "immutable",
            "name": "BASE",
            "nameLocation": "2982:4:142",
            "scope": 70494,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$50586",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 70040,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 70039,
                "name": "IERC20",
                "nameLocations": [
                  "2958:6:142"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50586,
                "src": "2958:6:142"
              },
              "referencedDeclaration": 50586,
              "src": "2958:6:142",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$50586",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 70044,
            "nodeType": "VariableDeclaration",
            "src": "3146:28:142",
            "nodes": [],
            "constant": false,
            "functionSelector": "ad5c4648",
            "mutability": "immutable",
            "name": "WETH",
            "nameLocation": "3170:4:142",
            "scope": 70494,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWETH9_$72798",
              "typeString": "contract IWETH9"
            },
            "typeName": {
              "id": 70043,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 70042,
                "name": "IWETH9",
                "nameLocations": [
                  "3146:6:142"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72798,
                "src": "3146:6:142"
              },
              "referencedDeclaration": 72798,
              "src": "3146:6:142",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWETH9_$72798",
                "typeString": "contract IWETH9"
              }
            },
            "visibility": "public"
          },
          {
            "id": 70046,
            "nodeType": "VariableDeclaration",
            "src": "3180:32:142",
            "nodes": [],
            "constant": false,
            "functionSelector": "ed0cee97",
            "mutability": "immutable",
            "name": "ILK_INDEX",
            "nameLocation": "3203:9:142",
            "scope": 70494,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 70045,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "3180:5:142",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "id": 70049,
            "nodeType": "VariableDeclaration",
            "src": "3218:29:142",
            "nodes": [],
            "constant": false,
            "functionSelector": "7535d246",
            "mutability": "immutable",
            "name": "POOL",
            "nameLocation": "3243:4:142",
            "scope": 70494,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IonPool_$66956",
              "typeString": "contract IonPool"
            },
            "typeName": {
              "id": 70048,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 70047,
                "name": "IonPool",
                "nameLocations": [
                  "3218:7:142"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66956,
                "src": "3218:7:142"
              },
              "referencedDeclaration": 66956,
              "src": "3218:7:142",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IonPool_$66956",
                "typeString": "contract IonPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 70052,
            "nodeType": "VariableDeclaration",
            "src": "3253:29:142",
            "nodes": [],
            "constant": false,
            "functionSelector": "7f968148",
            "mutability": "immutable",
            "name": "JOIN",
            "nameLocation": "3278:4:142",
            "scope": 70494,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GemJoin_$73284",
              "typeString": "contract GemJoin"
            },
            "typeName": {
              "id": 70051,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 70050,
                "name": "GemJoin",
                "nameLocations": [
                  "3253:7:142"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73284,
                "src": "3253:7:142"
              },
              "referencedDeclaration": 73284,
              "src": "3253:7:142",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GemJoin_$73284",
                "typeString": "contract GemJoin"
              }
            },
            "visibility": "public"
          },
          {
            "id": 70055,
            "nodeType": "VariableDeclaration",
            "src": "3288:33:142",
            "nodes": [],
            "constant": false,
            "functionSelector": "50c6cf88",
            "mutability": "immutable",
            "name": "LST_TOKEN",
            "nameLocation": "3312:9:142",
            "scope": 70494,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$50586",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 70054,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 70053,
                "name": "IERC20",
                "nameLocations": [
                  "3288:6:142"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50586,
                "src": "3288:6:142"
              },
              "referencedDeclaration": 50586,
              "src": "3288:6:142",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$50586",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 70058,
            "nodeType": "VariableDeclaration",
            "src": "3327:36:142",
            "nodes": [],
            "constant": false,
            "functionSelector": "1bb7cc99",
            "mutability": "immutable",
            "name": "WHITELIST",
            "nameLocation": "3354:9:142",
            "scope": 70494,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Whitelist_$68086",
              "typeString": "contract Whitelist"
            },
            "typeName": {
              "id": 70057,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 70056,
                "name": "Whitelist",
                "nameLocations": [
                  "3327:9:142"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 68086,
                "src": "3327:9:142"
              },
              "referencedDeclaration": 68086,
              "src": "3327:9:142",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Whitelist_$68086",
                "typeString": "contract Whitelist"
              }
            },
            "visibility": "public"
          },
          {
            "id": 70149,
            "nodeType": "FunctionDefinition",
            "src": "3732:552:142",
            "nodes": [],
            "body": {
              "id": 70148,
              "nodeType": "Block",
              "src": "3819:465:142",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 70075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70073,
                      "name": "POOL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70049,
                      "src": "3829:4:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IonPool_$66956",
                        "typeString": "contract IonPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70074,
                      "name": "_ionPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70064,
                      "src": "3836:8:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IonPool_$66956",
                        "typeString": "contract IonPool"
                      }
                    },
                    "src": "3829:15:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IonPool_$66956",
                      "typeString": "contract IonPool"
                    }
                  },
                  "id": 70076,
                  "nodeType": "ExpressionStatement",
                  "src": "3829:15:142"
                },
                {
                  "expression": {
                    "id": 70079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70077,
                      "name": "ILK_INDEX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70046,
                      "src": "3854:9:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70078,
                      "name": "_ilkIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70061,
                      "src": "3866:9:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3854:21:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 70080,
                  "nodeType": "ExpressionStatement",
                  "src": "3854:21:142"
                },
                {
                  "expression": {
                    "id": 70087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70081,
                      "name": "BASE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70041,
                      "src": "3886:4:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$50586",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 70083,
                              "name": "_ionPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70064,
                              "src": "3900:8:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IonPool_$66956",
                                "typeString": "contract IonPool"
                              }
                            },
                            "id": 70084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3909:10:142",
                            "memberName": "underlying",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76884,
                            "src": "3900:19:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$50586_$",
                              "typeString": "function () view external returns (contract IERC20)"
                            }
                          },
                          "id": 70085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3900:21:142",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$50586",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$50586",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 70082,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50586,
                        "src": "3893:6:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$50586_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 70086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3893:29:142",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$50586",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3886:36:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$50586",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 70088,
                  "nodeType": "ExpressionStatement",
                  "src": "3886:36:142"
                },
                {
                  "assignments": [
                    70091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70091,
                      "mutability": "mutable",
                      "name": "_weth",
                      "nameLocation": "3940:5:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 70148,
                      "src": "3933:12:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH9_$72798",
                        "typeString": "contract IWETH9"
                      },
                      "typeName": {
                        "id": 70090,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 70089,
                          "name": "IWETH9",
                          "nameLocations": [
                            "3933:6:142"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72798,
                          "src": "3933:6:142"
                        },
                        "referencedDeclaration": 72798,
                        "src": "3933:6:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH9_$72798",
                          "typeString": "contract IWETH9"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70093,
                  "initialValue": {
                    "id": 70092,
                    "name": "WETH_ADDRESS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 62520,
                    "src": "3948:12:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH9_$72798",
                      "typeString": "contract IWETH9"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3933:27:142"
                },
                {
                  "expression": {
                    "id": 70096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70094,
                      "name": "WETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70044,
                      "src": "3970:4:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH9_$72798",
                        "typeString": "contract IWETH9"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70095,
                      "name": "_weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70091,
                      "src": "3977:5:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWETH9_$72798",
                        "typeString": "contract IWETH9"
                      }
                    },
                    "src": "3970:12:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH9_$72798",
                      "typeString": "contract IWETH9"
                    }
                  },
                  "id": 70097,
                  "nodeType": "ExpressionStatement",
                  "src": "3970:12:142"
                },
                {
                  "assignments": [
                    70099
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70099,
                      "mutability": "mutable",
                      "name": "ilkAddress",
                      "nameLocation": "4001:10:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 70148,
                      "src": "3993:18:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 70098,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3993:7:142",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70104,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 70102,
                        "name": "_ilkIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70061,
                        "src": "4033:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 70100,
                        "name": "POOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70049,
                        "src": "4014:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IonPool_$66956",
                          "typeString": "contract IonPool"
                        }
                      },
                      "id": 70101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4019:13:142",
                      "memberName": "getIlkAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66220,
                      "src": "4014:18:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 70103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4014:29:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3993:50:142"
                },
                {
                  "expression": {
                    "id": 70109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70105,
                      "name": "LST_TOKEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70055,
                      "src": "4053:9:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$50586",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 70107,
                          "name": "ilkAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70099,
                          "src": "4072:10:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 70106,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50586,
                        "src": "4065:6:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$50586_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 70108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4065:18:142",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$50586",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "4053:30:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$50586",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 70110,
                  "nodeType": "ExpressionStatement",
                  "src": "4053:30:142"
                },
                {
                  "expression": {
                    "id": 70113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70111,
                      "name": "JOIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70052,
                      "src": "4094:4:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GemJoin_$73284",
                        "typeString": "contract GemJoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70112,
                      "name": "_gemJoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70067,
                      "src": "4101:8:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GemJoin_$73284",
                        "typeString": "contract GemJoin"
                      }
                    },
                    "src": "4094:15:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GemJoin_$73284",
                      "typeString": "contract GemJoin"
                    }
                  },
                  "id": 70114,
                  "nodeType": "ExpressionStatement",
                  "src": "4094:15:142"
                },
                {
                  "expression": {
                    "id": 70117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70115,
                      "name": "WHITELIST",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70058,
                      "src": "4120:9:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$68086",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70116,
                      "name": "_whitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70070,
                      "src": "4132:10:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Whitelist_$68086",
                        "typeString": "contract Whitelist"
                      }
                    },
                    "src": "4120:22:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$68086",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "id": 70118,
                  "nodeType": "ExpressionStatement",
                  "src": "4120:22:142"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 70124,
                            "name": "_ionPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70064,
                            "src": "4174:8:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IonPool_$66956",
                              "typeString": "contract IonPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IonPool_$66956",
                              "typeString": "contract IonPool"
                            }
                          ],
                          "id": 70123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4166:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 70122,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4166:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4166:17:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 70128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4190:7:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 70127,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4190:7:142",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 70126,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4185:4:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 70129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4185:13:142",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 70130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4199:3:142",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4185:17:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70119,
                        "name": "BASE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70041,
                        "src": "4153:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$50586",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 70121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4158:7:142",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50573,
                      "src": "4153:12:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 70131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4153:50:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70132,
                  "nodeType": "ExpressionStatement",
                  "src": "4153:50:142"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 70139,
                            "name": "_gemJoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70067,
                            "src": "4248:8:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GemJoin_$73284",
                              "typeString": "contract GemJoin"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GemJoin_$73284",
                              "typeString": "contract GemJoin"
                            }
                          ],
                          "id": 70138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4240:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 70137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4240:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4240:17:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 70143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4264:7:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 70142,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4264:7:142",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 70141,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4259:4:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 70144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4259:13:142",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 70145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4273:3:142",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4259:17:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 70134,
                            "name": "ilkAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70099,
                            "src": "4220:10:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 70133,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50586,
                          "src": "4213:6:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$50586_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 70135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4213:18:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$50586",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 70136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4232:7:142",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50573,
                      "src": "4213:26:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 70146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4213:64:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70147,
                  "nodeType": "ExpressionStatement",
                  "src": "4213:64:142"
                }
              ]
            },
            "documentation": {
              "id": 70059,
              "nodeType": "StructuredDocumentation",
              "src": "3370:357:142",
              "text": " @notice Creates a new instance of `IonHandlerBase`\n @param _ilkIndex of the ilk for which this instance is associated with.\n @param _ionPool address of `IonPool` core contract.\n @param _gemJoin the `GemJoin` associated with the `ilkIndex` of this\n contract.\n @param _whitelist the `Whitelist` module address."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 70071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70061,
                  "mutability": "mutable",
                  "name": "_ilkIndex",
                  "nameLocation": "3750:9:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70149,
                  "src": "3744:15:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 70060,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3744:5:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70064,
                  "mutability": "mutable",
                  "name": "_ionPool",
                  "nameLocation": "3769:8:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70149,
                  "src": "3761:16:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IonPool_$66956",
                    "typeString": "contract IonPool"
                  },
                  "typeName": {
                    "id": 70063,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70062,
                      "name": "IonPool",
                      "nameLocations": [
                        "3761:7:142"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66956,
                      "src": "3761:7:142"
                    },
                    "referencedDeclaration": 66956,
                    "src": "3761:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IonPool_$66956",
                      "typeString": "contract IonPool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70067,
                  "mutability": "mutable",
                  "name": "_gemJoin",
                  "nameLocation": "3787:8:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70149,
                  "src": "3779:16:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GemJoin_$73284",
                    "typeString": "contract GemJoin"
                  },
                  "typeName": {
                    "id": 70066,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70065,
                      "name": "GemJoin",
                      "nameLocations": [
                        "3779:7:142"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 73284,
                      "src": "3779:7:142"
                    },
                    "referencedDeclaration": 73284,
                    "src": "3779:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GemJoin_$73284",
                      "typeString": "contract GemJoin"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70070,
                  "mutability": "mutable",
                  "name": "_whitelist",
                  "nameLocation": "3807:10:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70149,
                  "src": "3797:20:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Whitelist_$68086",
                    "typeString": "contract Whitelist"
                  },
                  "typeName": {
                    "id": 70069,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70068,
                      "name": "Whitelist",
                      "nameLocations": [
                        "3797:9:142"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 68086,
                      "src": "3797:9:142"
                    },
                    "referencedDeclaration": 68086,
                    "src": "3797:9:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Whitelist_$68086",
                      "typeString": "contract Whitelist"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3743:75:142"
            },
            "returnParameters": {
              "id": 70072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3819:0:142"
            },
            "scope": 70494,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 70187,
            "nodeType": "FunctionDefinition",
            "src": "4668:389:142",
            "nodes": [],
            "body": {
              "id": 70186,
              "nodeType": "Block",
              "src": "4861:196:142",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 70166,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4898:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4902:6:142",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4898:10:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 70170,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4918:4:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          ],
                          "id": 70169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4910:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 70168,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4910:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4910:13:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70172,
                        "name": "amountCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70152,
                        "src": "4925:16:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70163,
                        "name": "LST_TOKEN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70055,
                        "src": "4871:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$50586",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 70165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4881:16:142",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50805,
                      "src": "4871:26:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$50586_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$50586_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 70173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4871:71:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70174,
                  "nodeType": "ExpressionStatement",
                  "src": "4871:71:142"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 70176,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4970:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4974:6:142",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4970:10:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 70178,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4982:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4986:6:142",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4982:10:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70180,
                        "name": "amountCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70152,
                        "src": "4994:16:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 70181,
                        "name": "amountToBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70154,
                        "src": "5012:14:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 70182,
                          "name": "AmountToBorrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70038,
                          "src": "5028:14:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AmountToBorrow_$70038_$",
                            "typeString": "type(enum IonHandlerBase.AmountToBorrow)"
                          }
                        },
                        "id": 70183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5043:6:142",
                        "memberName": "IS_MAX",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 70037,
                        "src": "5028:21:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AmountToBorrow_$70038",
                          "typeString": "enum IonHandlerBase.AmountToBorrow"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_AmountToBorrow_$70038",
                          "typeString": "enum IonHandlerBase.AmountToBorrow"
                        }
                      ],
                      "id": 70175,
                      "name": "_depositAndBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70280,
                      "src": "4952:17:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_enum$_AmountToBorrow_$70038_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,enum IonHandlerBase.AmountToBorrow)"
                      }
                    },
                    "id": 70184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4952:98:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70185,
                  "nodeType": "ExpressionStatement",
                  "src": "4952:98:142"
                }
              ]
            },
            "documentation": {
              "id": 70150,
              "nodeType": "StructuredDocumentation",
              "src": "4290:373:142",
              "text": " @notice Combines gem-joining and depositing collateral and then borrowing\n into one compound action.\n @param amountCollateral Amount of collateral to deposit. [WAD]\n @param amountToBorrow Amount of WETH to borrow. Due to rounding, true\n borrow amount might be slightly less. [WAD]\n @param proof that the user is whitelisted."
            },
            "functionSelector": "96c75259",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 70160,
                    "name": "proof",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70157,
                    "src": "4850:5:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                      "typeString": "bytes32[] calldata"
                    }
                  }
                ],
                "id": 70161,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 70159,
                  "name": "onlyWhitelistedBorrowers",
                  "nameLocations": [
                    "4825:24:142"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70034,
                  "src": "4825:24:142"
                },
                "nodeType": "ModifierInvocation",
                "src": "4825:31:142"
              }
            ],
            "name": "depositAndBorrow",
            "nameLocation": "4677:16:142",
            "parameters": {
              "id": 70158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70152,
                  "mutability": "mutable",
                  "name": "amountCollateral",
                  "nameLocation": "4711:16:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70187,
                  "src": "4703:24:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4703:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70154,
                  "mutability": "mutable",
                  "name": "amountToBorrow",
                  "nameLocation": "4745:14:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70187,
                  "src": "4737:22:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4737:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70157,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "4788:5:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70187,
                  "src": "4769:24:142",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 70155,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4769:7:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 70156,
                    "nodeType": "ArrayTypeName",
                    "src": "4769:9:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4693:106:142"
            },
            "returnParameters": {
              "id": 70162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4861:0:142"
            },
            "scope": 70494,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70280,
            "nodeType": "FunctionDefinition",
            "src": "5862:844:142",
            "nodes": [],
            "body": {
              "id": 70279,
              "nodeType": "Block",
              "src": "6080:626:142",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 70207,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6108:4:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          ],
                          "id": 70206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6100:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 70205,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6100:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6100:13:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70209,
                        "name": "amountCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70194,
                        "src": "6115:16:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70202,
                        "name": "JOIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70052,
                        "src": "6090:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GemJoin_$73284",
                          "typeString": "contract GemJoin"
                        }
                      },
                      "id": 70204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6095:4:142",
                      "memberName": "join",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73238,
                      "src": "6090:9:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 70210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6090:42:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70211,
                  "nodeType": "ExpressionStatement",
                  "src": "6090:42:142"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70215,
                        "name": "ILK_INDEX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70046,
                        "src": "6166:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 70216,
                        "name": "vaultHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70190,
                        "src": "6177:11:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 70219,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6198:4:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          ],
                          "id": 70218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6190:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 70217,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6190:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6190:13:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70221,
                        "name": "amountCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70194,
                        "src": "6205:16:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 70225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6237:1:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 70224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "6223:13:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes32[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 70222,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6227:7:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 70223,
                            "nodeType": "ArrayTypeName",
                            "src": "6227:9:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                              "typeString": "bytes32[]"
                            }
                          }
                        },
                        "id": 70226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6223:16:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 70212,
                        "name": "POOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70049,
                        "src": "6143:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IonPool_$66956",
                          "typeString": "contract IonPool"
                        }
                      },
                      "id": 70214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6148:17:142",
                      "memberName": "depositCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65424,
                      "src": "6143:22:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint8,address,address,uint256,bytes32[] memory) external"
                      }
                    },
                    "id": 70227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6143:97:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70228,
                  "nodeType": "ExpressionStatement",
                  "src": "6143:97:142"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 70229,
                      "name": "amountToBorrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70196,
                      "src": "6255:14:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 70230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6273:1:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6255:19:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70233,
                  "nodeType": "IfStatement",
                  "src": "6251:32:142",
                  "trueBody": {
                    "functionReturnParameters": 70201,
                    "id": 70232,
                    "nodeType": "Return",
                    "src": "6276:7:142"
                  }
                },
                {
                  "assignments": [
                    70235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70235,
                      "mutability": "mutable",
                      "name": "rate",
                      "nameLocation": "6301:4:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 70279,
                      "src": "6293:12:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70234,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6293:7:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70240,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 70238,
                        "name": "ILK_INDEX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70046,
                        "src": "6318:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 70236,
                        "name": "POOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70049,
                        "src": "6308:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IonPool_$66956",
                          "typeString": "contract IonPool"
                        }
                      },
                      "id": 70237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6313:4:142",
                      "memberName": "rate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66311,
                      "src": "6308:9:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_uint256_$",
                        "typeString": "function (uint8) view external returns (uint256)"
                      }
                    },
                    "id": 70239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6308:20:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6293:35:142"
                },
                {
                  "assignments": [
                    70242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70242,
                      "mutability": "mutable",
                      "name": "normalizedAmountToBorrow",
                      "nameLocation": "6347:24:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 70279,
                      "src": "6339:32:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70241,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6339:7:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70243,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6339:32:142"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_AmountToBorrow_$70038",
                      "typeString": "enum IonHandlerBase.AmountToBorrow"
                    },
                    "id": 70247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 70244,
                      "name": "amountToBorrowType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70199,
                      "src": "6385:18:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AmountToBorrow_$70038",
                        "typeString": "enum IonHandlerBase.AmountToBorrow"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 70245,
                        "name": "AmountToBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70038,
                        "src": "6407:14:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AmountToBorrow_$70038_$",
                          "typeString": "type(enum IonHandlerBase.AmountToBorrow)"
                        }
                      },
                      "id": 70246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6422:6:142",
                      "memberName": "IS_MIN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70036,
                      "src": "6407:21:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AmountToBorrow_$70038",
                        "typeString": "enum IonHandlerBase.AmountToBorrow"
                      }
                    },
                    "src": "6385:43:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 70263,
                    "nodeType": "Block",
                    "src": "6517:83:142",
                    "statements": [
                      {
                        "expression": {
                          "id": 70261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 70256,
                            "name": "normalizedAmountToBorrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70242,
                            "src": "6531:24:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 70259,
                                "name": "rate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70235,
                                "src": "6584:4:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 70257,
                                "name": "amountToBorrow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70196,
                                "src": "6558:14:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 70258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6573:10:142",
                              "memberName": "rayDivDown",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 74030,
                              "src": "6558:25:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 70260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6558:31:142",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6531:58:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 70262,
                        "nodeType": "ExpressionStatement",
                        "src": "6531:58:142"
                      }
                    ]
                  },
                  "id": 70264,
                  "nodeType": "IfStatement",
                  "src": "6381:219:142",
                  "trueBody": {
                    "id": 70255,
                    "nodeType": "Block",
                    "src": "6430:81:142",
                    "statements": [
                      {
                        "expression": {
                          "id": 70253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 70248,
                            "name": "normalizedAmountToBorrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70242,
                            "src": "6444:24:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 70251,
                                "name": "rate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70235,
                                "src": "6495:4:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 70249,
                                "name": "amountToBorrow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70196,
                                "src": "6471:14:142",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 70250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6486:8:142",
                              "memberName": "rayDivUp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 74050,
                              "src": "6471:23:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 70252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6471:29:142",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6444:56:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 70254,
                        "nodeType": "ExpressionStatement",
                        "src": "6444:56:142"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70268,
                        "name": "ILK_INDEX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70046,
                        "src": "6622:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 70269,
                        "name": "vaultHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70190,
                        "src": "6633:11:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70270,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70192,
                        "src": "6646:8:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70271,
                        "name": "normalizedAmountToBorrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70242,
                        "src": "6656:24:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 70275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6696:1:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 70274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "6682:13:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes32[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 70272,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6686:7:142",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 70273,
                            "nodeType": "ArrayTypeName",
                            "src": "6686:9:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                              "typeString": "bytes32[]"
                            }
                          }
                        },
                        "id": 70276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6682:16:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 70265,
                        "name": "POOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70049,
                        "src": "6610:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IonPool_$66956",
                          "typeString": "contract IonPool"
                        }
                      },
                      "id": 70267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6615:6:142",
                      "memberName": "borrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65289,
                      "src": "6610:11:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint8,address,address,uint256,bytes32[] memory) external"
                      }
                    },
                    "id": 70277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6610:89:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70278,
                  "nodeType": "ExpressionStatement",
                  "src": "6610:89:142"
                }
              ]
            },
            "documentation": {
              "id": 70188,
              "nodeType": "StructuredDocumentation",
              "src": "5063:794:142",
              "text": " @notice Handles all logic to gem-join and deposit collateral, followed by\n a borrow. It is also possible to use this function simply to gem-join and\n deposit collateral atomically by setting `amountToBorrow` to 0.\n @param vaultHolder The user who will be responsible for repaying debt.\n @param receiver The user who receives the borrowed funds.\n @param amountCollateral to move into vault. [WAD]\n @param amountToBorrow out of the vault. [WAD]\n @param amountToBorrowType Whether the `amountToBorrow` is a min or max.\n This will dictate the rounding direction when converting to normalized\n amount. If it is a minimum, then the rounding will be rounded up. If it\n is a maximum, then the rounding will be rounded down."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositAndBorrow",
            "nameLocation": "5871:17:142",
            "parameters": {
              "id": 70200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70190,
                  "mutability": "mutable",
                  "name": "vaultHolder",
                  "nameLocation": "5906:11:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70280,
                  "src": "5898:19:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5898:7:142",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70192,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "5935:8:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70280,
                  "src": "5927:16:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5927:7:142",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70194,
                  "mutability": "mutable",
                  "name": "amountCollateral",
                  "nameLocation": "5961:16:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70280,
                  "src": "5953:24:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5953:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70196,
                  "mutability": "mutable",
                  "name": "amountToBorrow",
                  "nameLocation": "5995:14:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70280,
                  "src": "5987:22:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5987:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70199,
                  "mutability": "mutable",
                  "name": "amountToBorrowType",
                  "nameLocation": "6034:18:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70280,
                  "src": "6019:33:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AmountToBorrow_$70038",
                    "typeString": "enum IonHandlerBase.AmountToBorrow"
                  },
                  "typeName": {
                    "id": 70198,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70197,
                      "name": "AmountToBorrow",
                      "nameLocations": [
                        "6019:14:142"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70038,
                      "src": "6019:14:142"
                    },
                    "referencedDeclaration": 70038,
                    "src": "6019:14:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AmountToBorrow_$70038",
                      "typeString": "enum IonHandlerBase.AmountToBorrow"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5888:170:142"
            },
            "returnParameters": {
              "id": 70201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6080:0:142"
            },
            "scope": 70494,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 70342,
            "nodeType": "FunctionDefinition",
            "src": "7468:474:142",
            "nodes": [],
            "body": {
              "id": 70341,
              "nodeType": "Block",
              "src": "7537:405:142",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    70287,
                    70289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70287,
                      "mutability": "mutable",
                      "name": "repayAmount",
                      "nameLocation": "7556:11:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 70341,
                      "src": "7548:19:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70286,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7548:7:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 70289,
                      "mutability": "mutable",
                      "name": "normalizedDebtToRepay",
                      "nameLocation": "7577:21:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 70341,
                      "src": "7569:29:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70288,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7569:7:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70294,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 70291,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7622:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7626:6:142",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7622:10:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 70290,
                      "name": "_getFullRepayAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70389,
                      "src": "7602:19:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 70293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7602:31:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7547:86:142"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 70298,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7666:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7670:6:142",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7666:10:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 70302,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7686:4:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          ],
                          "id": 70301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7678:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 70300,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7678:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7678:13:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70304,
                        "name": "repayAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70287,
                        "src": "7693:11:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70295,
                        "name": "BASE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70041,
                        "src": "7644:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$50586",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 70297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7649:16:142",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50805,
                      "src": "7644:21:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$50586_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$50586_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 70305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7644:61:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70306,
                  "nodeType": "ExpressionStatement",
                  "src": "7644:61:142"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70310,
                        "name": "ILK_INDEX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70046,
                        "src": "7727:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 70311,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7738:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7742:6:142",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7738:10:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 70315,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7758:4:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          ],
                          "id": 70314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7750:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 70313,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7750:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7750:13:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70317,
                        "name": "normalizedDebtToRepay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70289,
                        "src": "7765:21:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70307,
                        "name": "POOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70049,
                        "src": "7716:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IonPool_$66956",
                          "typeString": "contract IonPool"
                        }
                      },
                      "id": 70309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7721:5:142",
                      "memberName": "repay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65336,
                      "src": "7716:10:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint8,address,address,uint256) external"
                      }
                    },
                    "id": 70318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7716:71:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70319,
                  "nodeType": "ExpressionStatement",
                  "src": "7716:71:142"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70323,
                        "name": "ILK_INDEX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70046,
                        "src": "7822:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "expression": {
                          "id": 70324,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7833:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7837:6:142",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7833:10:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 70328,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7853:4:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          ],
                          "id": 70327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7845:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 70326,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7845:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7845:13:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70330,
                        "name": "collateralToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70283,
                        "src": "7860:20:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70320,
                        "name": "POOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70049,
                        "src": "7798:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IonPool_$66956",
                          "typeString": "contract IonPool"
                        }
                      },
                      "id": 70322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7803:18:142",
                      "memberName": "withdrawCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65377,
                      "src": "7798:23:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint8,address,address,uint256) external"
                      }
                    },
                    "id": 70331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7798:83:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70332,
                  "nodeType": "ExpressionStatement",
                  "src": "7798:83:142"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 70336,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7902:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7906:6:142",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7902:10:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70338,
                        "name": "collateralToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70283,
                        "src": "7914:20:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70333,
                        "name": "JOIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70052,
                        "src": "7892:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GemJoin_$73284",
                          "typeString": "contract GemJoin"
                        }
                      },
                      "id": 70335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7897:4:142",
                      "memberName": "exit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73283,
                      "src": "7892:9:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 70339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7892:43:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70340,
                  "nodeType": "ExpressionStatement",
                  "src": "7892:43:142"
                }
              ]
            },
            "documentation": {
              "id": 70281,
              "nodeType": "StructuredDocumentation",
              "src": "6712:751:142",
              "text": " @notice Will repay all debt and withdraw desired collateral amount. This\n function can also simply be used for a full repayment (which may be\n difficult through a direct tx to the `IonPool`) by setting\n `collateralToWithdraw` to 0.\n @dev Will repay the debt belonging to `msg.sender`. This function is\n necessary because with `rate` updating every single block, it may be\n difficult to repay a full amount if a user uses the total debt from a\n previous block. If a user ends up repaying all but dust amounts of debt\n (due to a slight `rate` change), then they repayment will likely fail due\n to the `dust` parameter.\n @param collateralToWithdraw in collateral terms. [WAD]"
            },
            "functionSelector": "e54a55b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayFullAndWithdraw",
            "nameLocation": "7477:20:142",
            "parameters": {
              "id": 70284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70283,
                  "mutability": "mutable",
                  "name": "collateralToWithdraw",
                  "nameLocation": "7506:20:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70342,
                  "src": "7498:28:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7498:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7497:30:142"
            },
            "returnParameters": {
              "id": 70285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7537:0:142"
            },
            "scope": 70494,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70389,
            "nodeType": "FunctionDefinition",
            "src": "8423:475:142",
            "nodes": [],
            "body": {
              "id": 70388,
              "nodeType": "Block",
              "src": "8534:364:142",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    70353
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70353,
                      "mutability": "mutable",
                      "name": "currentRate",
                      "nameLocation": "8552:11:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 70388,
                      "src": "8544:19:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70352,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8544:7:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70358,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 70356,
                        "name": "ILK_INDEX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70046,
                        "src": "8576:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 70354,
                        "name": "POOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70049,
                        "src": "8566:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IonPool_$66956",
                          "typeString": "contract IonPool"
                        }
                      },
                      "id": 70355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8571:4:142",
                      "memberName": "rate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66311,
                      "src": "8566:9:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_uint256_$",
                        "typeString": "function (uint8) view external returns (uint256)"
                      }
                    },
                    "id": 70357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8566:20:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8544:42:142"
                },
                {
                  "expression": {
                    "id": 70365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70359,
                      "name": "normalizedDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70350,
                      "src": "8597:14:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 70362,
                          "name": "ILK_INDEX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70046,
                          "src": "8634:9:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "id": 70363,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70345,
                          "src": "8645:4:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 70360,
                          "name": "POOL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70049,
                          "src": "8614:4:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IonPool_$66956",
                            "typeString": "contract IonPool"
                          }
                        },
                        "id": 70361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8619:14:142",
                        "memberName": "normalizedDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66462,
                        "src": "8614:19:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint8_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint8,address) view external returns (uint256)"
                        }
                      },
                      "id": 70364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8614:36:142",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8597:53:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 70366,
                  "nodeType": "ExpressionStatement",
                  "src": "8597:53:142"
                },
                {
                  "assignments": [
                    70368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70368,
                      "mutability": "mutable",
                      "name": "amountRad",
                      "nameLocation": "8764:9:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 70388,
                      "src": "8756:17:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70367,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8756:7:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70372,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 70369,
                      "name": "normalizedDebt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70350,
                      "src": "8776:14:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 70370,
                      "name": "currentRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70353,
                      "src": "8793:11:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8776:28:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8756:48:142"
                },
                {
                  "expression": {
                    "id": 70377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70373,
                      "name": "repayAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70348,
                      "src": "8814:11:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 70376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 70374,
                        "name": "amountRad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70368,
                        "src": "8828:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 70375,
                        "name": "RAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73883,
                        "src": "8840:3:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8828:15:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8814:29:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 70378,
                  "nodeType": "ExpressionStatement",
                  "src": "8814:29:142"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 70381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 70379,
                        "name": "amountRad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70368,
                        "src": "8857:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "id": 70380,
                        "name": "RAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73883,
                        "src": "8869:3:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8857:15:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 70382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8875:1:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8857:19:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70387,
                  "nodeType": "IfStatement",
                  "src": "8853:38:142",
                  "trueBody": {
                    "expression": {
                      "id": 70385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "8878:13:142",
                      "subExpression": {
                        "id": 70384,
                        "name": "repayAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70348,
                        "src": "8880:11:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 70386,
                    "nodeType": "ExpressionStatement",
                    "src": "8878:13:142"
                  }
                }
              ]
            },
            "documentation": {
              "id": 70343,
              "nodeType": "StructuredDocumentation",
              "src": "7948:470:142",
              "text": " @notice Helper function to get the repayment amount for all the debt of a\n `user`.\n @dev This simply emulates the rounding behaviour of the `IonPool` to\n arrive at an accurate value.\n @param user Address of the user.\n @return repayAmount Amount of base asset required to repay all debt (this\n mimics IonPool's behavior). [WAD]\n @return normalizedDebt Total normalized debt held by `user`'s vault.\n [WAD]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getFullRepayAmount",
            "nameLocation": "8432:19:142",
            "parameters": {
              "id": 70346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70345,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8460:4:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70389,
                  "src": "8452:12:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8452:7:142",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8451:14:142"
            },
            "returnParameters": {
              "id": 70351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70348,
                  "mutability": "mutable",
                  "name": "repayAmount",
                  "nameLocation": "8497:11:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70389,
                  "src": "8489:19:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8489:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70350,
                  "mutability": "mutable",
                  "name": "normalizedDebt",
                  "nameLocation": "8518:14:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70389,
                  "src": "8510:22:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8510:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8488:45:142"
            },
            "scope": 70494,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 70419,
            "nodeType": "FunctionDefinition",
            "src": "9301:250:142",
            "nodes": [],
            "body": {
              "id": 70418,
              "nodeType": "Block",
              "src": "9387:164:142",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 70400,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9419:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9423:6:142",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9419:10:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 70404,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9439:4:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          ],
                          "id": 70403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9431:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 70402,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9431:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9431:13:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70406,
                        "name": "debtToRepay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70392,
                        "src": "9446:11:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70397,
                        "name": "BASE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70041,
                        "src": "9397:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$50586",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 70399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9402:16:142",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50805,
                      "src": "9397:21:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$50586_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$50586_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 70407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9397:61:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70408,
                  "nodeType": "ExpressionStatement",
                  "src": "9397:61:142"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 70410,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9486:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9490:6:142",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9486:10:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 70412,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9498:3:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 70413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9502:6:142",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9498:10:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70414,
                        "name": "collateralToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70394,
                        "src": "9510:20:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 70415,
                        "name": "debtToRepay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70392,
                        "src": "9532:11:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 70409,
                      "name": "_repayAndWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70477,
                      "src": "9468:17:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 70416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9468:76:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70417,
                  "nodeType": "ExpressionStatement",
                  "src": "9468:76:142"
                }
              ]
            },
            "documentation": {
              "id": 70390,
              "nodeType": "StructuredDocumentation",
              "src": "8904:392:142",
              "text": " @notice Combines repaying debt and then withdrawing and gem-exitting\n collateral into one compound action.\n If repaying **all** is the intention, use `repayFullAndWithdraw()`\n instead to prevent tx revert from dust amounts of debt in vault.\n @param debtToRepay In ETH terms. [WAD]\n @param collateralToWithdraw In collateral terms. [WAD]"
            },
            "functionSelector": "ebc9b94d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayAndWithdraw",
            "nameLocation": "9310:16:142",
            "parameters": {
              "id": 70395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70392,
                  "mutability": "mutable",
                  "name": "debtToRepay",
                  "nameLocation": "9335:11:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70419,
                  "src": "9327:19:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9327:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70394,
                  "mutability": "mutable",
                  "name": "collateralToWithdraw",
                  "nameLocation": "9356:20:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70419,
                  "src": "9348:28:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9348:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9326:51:142"
            },
            "returnParameters": {
              "id": 70396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9387:0:142"
            },
            "scope": 70494,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70477,
            "nodeType": "FunctionDefinition",
            "src": "10047:543:142",
            "nodes": [],
            "body": {
              "id": 70476,
              "nodeType": "Block",
              "src": "10223:367:142",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    70432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70432,
                      "mutability": "mutable",
                      "name": "currentRate",
                      "nameLocation": "10241:11:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 70476,
                      "src": "10233:19:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70431,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10233:7:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70437,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 70435,
                        "name": "ILK_INDEX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70046,
                        "src": "10265:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 70433,
                        "name": "POOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70049,
                        "src": "10255:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IonPool_$66956",
                          "typeString": "contract IonPool"
                        }
                      },
                      "id": 70434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10260:4:142",
                      "memberName": "rate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66311,
                      "src": "10255:9:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_uint256_$",
                        "typeString": "function (uint8) view external returns (uint256)"
                      }
                    },
                    "id": 70436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10255:20:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10233:42:142"
                },
                {
                  "assignments": [
                    70439
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70439,
                      "mutability": "mutable",
                      "name": "normalizedDebtToRepay",
                      "nameLocation": "10294:21:142",
                      "nodeType": "VariableDeclaration",
                      "scope": 70476,
                      "src": "10286:29:142",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70438,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10286:7:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70444,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 70442,
                        "name": "currentRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70432,
                        "src": "10341:11:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70440,
                        "name": "debtToRepay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70428,
                        "src": "10318:11:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 70441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10330:10:142",
                      "memberName": "rayDivDown",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74030,
                      "src": "10318:22:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 70443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10318:35:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10286:67:142"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70448,
                        "name": "ILK_INDEX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70046,
                        "src": "10375:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 70449,
                        "name": "vaultHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70422,
                        "src": "10386:11:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 70452,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10407:4:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          ],
                          "id": 70451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10399:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 70450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10399:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10399:13:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70454,
                        "name": "normalizedDebtToRepay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70439,
                        "src": "10414:21:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70445,
                        "name": "POOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70049,
                        "src": "10364:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IonPool_$66956",
                          "typeString": "contract IonPool"
                        }
                      },
                      "id": 70447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10369:5:142",
                      "memberName": "repay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65336,
                      "src": "10364:10:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint8,address,address,uint256) external"
                      }
                    },
                    "id": 70455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10364:72:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70456,
                  "nodeType": "ExpressionStatement",
                  "src": "10364:72:142"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70460,
                        "name": "ILK_INDEX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70046,
                        "src": "10471:9:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 70461,
                        "name": "vaultHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70422,
                        "src": "10482:11:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 70464,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10503:4:142",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IonHandlerBase_$70494",
                              "typeString": "contract IonHandlerBase"
                            }
                          ],
                          "id": 70463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10495:7:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 70462,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10495:7:142",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 70465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10495:13:142",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70466,
                        "name": "collateralToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70426,
                        "src": "10510:20:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70457,
                        "name": "POOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70049,
                        "src": "10447:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IonPool_$66956",
                          "typeString": "contract IonPool"
                        }
                      },
                      "id": 70459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10452:18:142",
                      "memberName": "withdrawCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65377,
                      "src": "10447:23:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint8_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint8,address,address,uint256) external"
                      }
                    },
                    "id": 70467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10447:84:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70468,
                  "nodeType": "ExpressionStatement",
                  "src": "10447:84:142"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70472,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70424,
                        "src": "10552:8:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70473,
                        "name": "collateralToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70426,
                        "src": "10562:20:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70469,
                        "name": "JOIN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70052,
                        "src": "10542:4:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GemJoin_$73284",
                          "typeString": "contract GemJoin"
                        }
                      },
                      "id": 70471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10547:4:142",
                      "memberName": "exit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73283,
                      "src": "10542:9:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 70474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10542:41:142",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70475,
                  "nodeType": "ExpressionStatement",
                  "src": "10542:41:142"
                }
              ]
            },
            "documentation": {
              "id": 70420,
              "nodeType": "StructuredDocumentation",
              "src": "9557:485:142",
              "text": " @notice Handles all logic to repay debt, followed by a collateral\n withdrawal and gem-exit. This function can also be used to just withdraw\n and gem-exit in atomic fashion by setting the `debtToRepay` to 0.\n @param vaultHolder The user whose debt will be repaid.\n @param receiver The user who receives the the withdrawn collateral.\n @param collateralToWithdraw to move into vault. [WAD]\n @param debtToRepay out of the vault. [WAD]"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_repayAndWithdraw",
            "nameLocation": "10056:17:142",
            "parameters": {
              "id": 70429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70422,
                  "mutability": "mutable",
                  "name": "vaultHolder",
                  "nameLocation": "10091:11:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70477,
                  "src": "10083:19:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10083:7:142",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70424,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "10120:8:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70477,
                  "src": "10112:16:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10112:7:142",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70426,
                  "mutability": "mutable",
                  "name": "collateralToWithdraw",
                  "nameLocation": "10146:20:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70477,
                  "src": "10138:28:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10138:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70428,
                  "mutability": "mutable",
                  "name": "debtToRepay",
                  "nameLocation": "10184:11:142",
                  "nodeType": "VariableDeclaration",
                  "scope": 70477,
                  "src": "10176:19:142",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10176:7:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10073:128:142"
            },
            "returnParameters": {
              "id": 70430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10223:0:142"
            },
            "scope": 70494,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 70493,
            "nodeType": "FunctionDefinition",
            "src": "10723:117:142",
            "nodes": [],
            "body": {
              "id": 70492,
              "nodeType": "Block",
              "src": "10750:90:142",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 70487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 70481,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10764:3:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 70482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10768:6:142",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "10764:10:142",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 70485,
                          "name": "WETH_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62520,
                          "src": "10786:12:142",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWETH9_$72798",
                            "typeString": "contract IWETH9"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IWETH9_$72798",
                            "typeString": "contract IWETH9"
                          }
                        ],
                        "id": 70484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10778:7:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 70483,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10778:7:142",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 70486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10778:21:142",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10764:35:142",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70491,
                  "nodeType": "IfStatement",
                  "src": "10760:73:142",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 70488,
                        "name": "CannotSendEthToContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69989,
                        "src": "10808:23:142",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 70489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10808:25:142",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 70490,
                    "nodeType": "RevertStatement",
                    "src": "10801:32:142"
                  }
                }
              ]
            },
            "documentation": {
              "id": 70478,
              "nodeType": "StructuredDocumentation",
              "src": "10596:122:142",
              "text": " @notice ETH cannot be directly sent to this contract.\n @dev To allow unwrapping of WETH into ETH."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 70479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10730:2:142"
            },
            "returnParameters": {
              "id": 70480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10750:0:142"
            },
            "scope": 70494,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "IonHandlerBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 69976,
          "nodeType": "StructuredDocumentation",
          "src": "560:606:142",
          "text": " @notice The base handler contract for simpler interactions with the `IonPool`\n core contract. It combines various individual interactions into one compound\n interaction to faciliate reaching user end-goals in atomic fashion.\n @dev To actually borrow from `IonPool`, a user must submit a \"normalized\" borrow\n amount. This contract is designed to be user-intuitive and, thus, allows a user\n to submit a standard desired borrow amount, which this contract will then\n convert into to the appropriate \"normalized\" borrow amount.\n @custom:security-contact security@molecularlabs.io"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          70494
        ],
        "name": "IonHandlerBase",
        "nameLocation": "1185:14:142",
        "scope": 70495,
        "usedErrors": [
          50745,
          51026,
          51031,
          51034,
          52354,
          69989,
          69995,
          69999
        ],
        "usedEvents": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 142
}